"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5589],{30751:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>d,toc:()=>s});var i=t(85893),o=t(11151);const l={},a="Building in Ubuntu",d={id:"development/building/Building-in-Ubuntu",title:"Building in Ubuntu",description:"Building for Ubuntu platform is remarkably easy.",source:"@site/docs/development/building/Building-in-Ubuntu.md",sourceDirName:"development/building",slug:"/development/building/Building-in-Ubuntu",permalink:"/docs/development/building/Building-in-Ubuntu",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Building in Mac OS X",permalink:"/docs/development/building/Building-in-Mac-OSX"},next:{title:"Building in Windows",permalink:"/docs/development/building/Building-in-Windows"}},r={},s=[{value:"Clone Betaflight Repository and Install Toolchain",id:"clone-betaflight-repository-and-install-toolchain",level:3},{value:"Updating and Rebuilding Firmware",id:"updating-and-rebuilding-firmware",level:3},{value:"Building Betaflight Configurator",id:"building-betaflight-configurator",level:3},{value:"Flashing a Target with Betaflight Configurator",id:"flashing-a-target-with-betaflight-configurator",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"building-in-ubuntu",children:"Building in Ubuntu"}),"\n",(0,i.jsx)(n.p,{children:"Building for Ubuntu platform is remarkably easy.\nThis document is tested and based on the latest Ubuntu 22.04 LTS release and can also be used for WSL."}),"\n",(0,i.jsx)(n.h3,{id:"clone-betaflight-repository-and-install-toolchain",children:"Clone Betaflight Repository and Install Toolchain"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo apt update && sudo apt upgrade\n$ sudo apt install build-essential libblocksruntime-dev libtool git curl clang-12\n$ git clone https://github.com/betaflight/betaflight.git\n$ cd betaflight\n$ make arm_sdk_install\n$ make configs\n"})}),"\n",(0,i.jsx)(n.h3,{id:"updating-and-rebuilding-firmware",children:"Updating and Rebuilding Firmware"}),"\n",(0,i.jsx)(n.p,{children:"Navigate to your local betaflight repository and use the following steps to pull the latest changes and rebuild your version of betaflight:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ git pull\n$ make MATEKF405 [EXTRA_FLAGS="-DUSE_RANGEFINDER"] [DEBUG=DBG]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Using the optional EXTRA_FLAGS parameters you can specify options like USE_RANGEFINDER.\nUsing the optional DEBUG parameter you can specify the debugger."}),"\n",(0,i.jsxs)(n.p,{children:["You'll see a set of files being compiled, and finally linked, yielding both an ELF and then a HEX.\nYou can use the Betaflight-Configurator to flash the ",(0,i.jsx)(n.code,{children:"obj/betaflight_MATEKF405.hex"})," file.\nMake sure to remove ",(0,i.jsx)(n.code,{children:"obj/"})," and ",(0,i.jsx)(n.code,{children:"make clean"}),", before building again."]}),"\n",(0,i.jsx)(n.h3,{id:"building-betaflight-configurator",children:"Building Betaflight Configurator"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ sudo apt update && sudo apt upgrade\n$ sudo apt install libatomic1 npm\n$ sudo npm install -g gulp-cli yarn\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n$ source ~/.bashrc\n$ nvm install 16 (for exact version please check link below)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://github.com/betaflight/betaflight-configurator#development",children:"Betaflight Configurator Development"})," for how to build the Betaflight Configurator."]}),"\n",(0,i.jsx)(n.h3,{id:"flashing-a-target-with-betaflight-configurator",children:"Flashing a Target with Betaflight Configurator"}),"\n",(0,i.jsx)(n.p,{children:"In most Linux distributions the user won't have access to serial interfaces by default. Flashing a target requires configuration of usb for dfu mode. To add this access right type the following command in a terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'    $ sudo usermod -a -G dialout $USER\n    $ sudo usermod -a -G plugdev $USER\n    $ sudo apt-get remove modemmanager\n    $ sudo tee -a /etc/udev/rules.d/46-stdfu-permissions.rules <<EOF\n# DFU (Internal bootloader for STM32 and AT32 MCUs)\n\nACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="0483", ATTRS{idProduct}=="df11", MODE="0664", GROUP="plugdev"\nACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="2e3c", ATTRS{idProduct}=="df11", MODE="0664", GROUP="plugdev"\nEOF\n'})}),"\n",(0,i.jsx)(n.p,{children:"Please log out and log in to active the settings. You should now be able to flash your target using Betaflight Configurator."}),"\n",(0,i.jsx)(n.p,{children:"Credit goes to K.C. Budd, AKfreak for testing, and pulsar for doing the long legwork that yielded the original content of this document."})]})}function c(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>a});var i=t(67294);const o={},l=i.createContext(o);function a(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);