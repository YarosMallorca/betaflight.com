"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5602],{20134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(85893),i=n(11151);n(74866),n(85162);const o={sidebar_position:8},a="Receiver Tab",s={id:"wiki/configurator/receiver-tab",title:"Receiver Tab",description:"A receiver is a device that (as its name suggests) receives data from a transmitter, usually your",source:"@site/docs/wiki/configurator/receiver-tab.mdx",sourceDirName:"wiki/configurator",slug:"/wiki/configurator/receiver-tab",permalink:"/docs/wiki/configurator/receiver-tab",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"wiki",previous:{title:"PID Tuning Tab",permalink:"/docs/wiki/configurator/pid-tuning-tab"},next:{title:"Modes Tab",permalink:"/docs/wiki/configurator/auxiliary-tab"}},l={},c=[{value:"Output Preview",id:"output-preview",level:2},{value:"Receiver Configuration",id:"receiver-configuration",level:2},{value:"Receiver",id:"receiver",level:3},{value:"Telemetry",id:"telemetry",level:3},{value:"RSSI",id:"rssi",level:3},{value:"Channel Map",id:"channel-map",level:3},{value:"RSSI Channel",id:"rssi-channel",level:3},{value:"&quot;Stick&quot; Settings",id:"stick-settings",level:3},{value:"Deadband Settings",id:"deadband-settings",level:3},{value:"RC Smoothing",id:"rc-smoothing",level:3}];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"receiver-tab",children:"Receiver Tab"}),"\n",(0,r.jsx)(t.p,{children:"A receiver is a device that (as its name suggests) receives data from a transmitter, usually your\nradio controller. The receiver tab is used to configure the FC such that it can read the receiver data.\nThe receiver tab is divided into two sections: the receiver output preview and the receiver configuration."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Receiver Tab",src:n(94002).Z+"",width:"1617",height:"725"})}),"\n",(0,r.jsx)(t.h2,{id:"output-preview",children:"Output Preview"}),"\n",(0,r.jsx)(t.p,{children:"The receiver output preview shows the current state of the receiver channels, both in channel value and graph forms, and how those affect the drone movement."}),"\n",(0,r.jsx)(t.h2,{id:"receiver-configuration",children:"Receiver Configuration"}),"\n",(0,r.jsx)(t.p,{children:"Used to configure all of the settings that are specific to your receiver"}),"\n",(0,r.jsx)(t.h3,{id:"receiver",children:"Receiver"}),"\n",(0,r.jsx)(t.p,{children:"Select the communication protocol used by your receiver. The options are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"PPM/CPPM"})," - Legacy protocol, unlikely to be used in modern setups"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Serial-based"})," - Most modern receivers communicate over serial, using different protocols like CRSF or SBUS"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"PWM"})," - Legacy protocol, unlikely to be used in modern setups"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"MSP"})," - An advanced option, using the MSP protocol to communicate with the receiver"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"SPI"})," - Used for most integrated receivers, like ExpressLRS on tinywhoop AIO boards"]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsx)(t.p,{children:"Selecting the incorrect protocol will lead to no signal being detected, or the signal being interpreted incorrectly. You have to pick the correct one for your receiver"})}),"\n",(0,r.jsx)(t.h3,{id:"telemetry",children:"Telemetry"}),"\n",(0,r.jsx)(t.p,{children:"Toggle the telemetry output on or off. Also required for VTX control from ELRS receivers"}),"\n",(0,r.jsx)(t.h3,{id:"rssi",children:"RSSI"}),"\n",(0,r.jsx)(t.p,{children:"Mostly a legacy option, used to configure a separate analogue 0-3.3V RSSI input. Most modern receivers communicate\nRSSI (along with other telemetry data) over the same serial connection as the control data."}),"\n",(0,r.jsx)(t.p,{children:"Do not enable this option with a modern receiver"}),"\n",(0,r.jsx)(t.h3,{id:"channel-map",children:"Channel Map"}),"\n",(0,r.jsx)(t.p,{children:"Different receivers output the four main control channels:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Aileron"})," - Roll (left/right)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Elevator"})," - Pitch (forward/backward)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Throttle"})," - Throttle (up/down)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Rudder"})," - Yaw (left/right)"]}),"\n"]}),"\n",(0,r.jsxs)(t.admonition,{type:"caution",children:[(0,r.jsx)(t.p,{children:"If your radio input does not match up to what you see in the preview, you need to change the channel map.\nThere are also preset options for some of the more common systems:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"FrSky/Futaba/Hitec"})," - FrSky, Futaba, and Hitec receivers output the channels in the same order as the\nBetaflight default (AETR1234)"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Spektrum/Graupned/JR"})," - Spektrum receivers output the channels in a different order than the Betaflight default\n(TAER1234)"]}),"\n"]})]}),"\n",(0,r.jsx)(t.h3,{id:"rssi-channel",children:"RSSI Channel"}),"\n",(0,r.jsx)(t.p,{children:"Some older receivers only had RSSI output on a single channel. If you have an older receiver, you can set\nwhich channel is used to read the RSSI value. This is usually AUX 4 or 12.\nLeave this setting disabled if you have a modern receiver such one using the CRSF or GHST protocols"}),"\n",(0,r.jsxs)(t.p,{children:["One use case for this setting on modern equipment is to view LQ on DJI FPV goggles, which do not include a native LQ\nfield. In this case you can set this channel to the channel used for LQ - AUX11 on ELRS. A better solution is to\nenable the ",(0,r.jsx)(t.code,{children:"osd_craftname_msgs"})," CLI option or install WTFOS on your DJI FPV system for a full customisable OSD"]}),"\n",(0,r.jsx)(t.h3,{id:"stick-settings",children:'"Stick" Settings'}),"\n",(0,r.jsx)(t.p,{children:"Minimum/Center/Maximum values for the four main control channels. These are used to set the range of the\nstick values, usually for safety and calibration purposes"}),"\n",(0,r.jsx)(t.h3,{id:"deadband-settings",children:"Deadband Settings"}),"\n",(0,r.jsx)(t.p,{children:"Deadband is the range of stick movement that is ignored. Some radios/receivers may have a small amount of\njitter, and this setting can be used to ignore that. You also have options to set it specifically for Yaw\nand 3d mode throttle"}),"\n",(0,r.jsx)(t.h3,{id:"rc-smoothing",children:"RC Smoothing"}),"\n",(0,r.jsx)(t.p,{children:"Toggle the RC smoothing filter on or off"})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>a});n(67294);var r=n(36905);const i={tabItem:"tabItem_Ymn6"};var o=n(85893);function a(e){let{children:t,hidden:n,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,a),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>S});var r=n(67294),i=n(36905),o=n(12466),a=n(16550),s=n(20469),l=n(91980),c=n(67392),u=n(50012);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const i=(0,a.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(i.location.search);t.set(o,e),i.replace({...i.location,search:t.toString()})}),[o,i])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,o=h(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[c,d]=f({queryString:n,groupId:i}),[v,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,o]=(0,u.Nk)(n);return[i,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:i}),g=(()=>{const e=c??v;return p({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,o]),tabValues:o}}var m=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(85893);function x(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),i=s[n].value;i!==r&&(c(t),a(i))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t),children:s.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...o,className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:i}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function y(e){const t=v(e);return(0,b.jsxs)("div",{className:(0,i.Z)("tabs-container",g.tabList),children:[(0,b.jsx)(x,{...e,...t}),(0,b.jsx)(j,{...e,...t})]})}function S(e){const t=(0,m.Z)();return(0,b.jsx)(y,{...e,children:d(e.children)},String(t))}},94002:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/betaflight_configurator_receiver_tab-6c2c19121e4eba8d1cc3f505d7d2ac74.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var r=n(67294);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);