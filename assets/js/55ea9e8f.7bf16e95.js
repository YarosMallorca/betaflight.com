"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[902],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),d=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},f=function(e){var t=d(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),c=d(n),p=i,g=c["".concat(u,".").concat(p)]||c[p]||s[p]||a;return n?r.createElement(g,o(o({ref:t},f),{},{components:n})):r.createElement(g,o({ref:t},f))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},58466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=n(87462),i=(n(67294),n(3905));const a={},o="How to Create a Flight Controller Configuration File for Betaflight 4.5",l={unversionedId:"manufacturer/crearing-configuration",id:"manufacturer/crearing-configuration",title:"How to Create a Flight Controller Configuration File for Betaflight 4.5",description:"Under construction.",source:"@site/docs/manufacturer/crearing-configuration.mdx",sourceDirName:"manufacturer",slug:"/manufacturer/crearing-configuration",permalink:"/docs/manufacturer/crearing-configuration",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"manufacturer",previous:{title:"Betaflight Connector Standard",permalink:"/docs/manufacturer/connector-standard"},next:{title:"How to Create a Target Configuration",permalink:"/docs/manufacturer/creating-an-unified-target"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"License Information",id:"license-information",level:3},{value:"Board Configuration",id:"board-configuration",level:3},{value:"Hardware Defines",id:"hardware-defines",level:3},{value:"Pin Resources",id:"pin-resources",level:3},{value:"Timer and Dma Resources",id:"timer-and-dma-resources",level:3},{value:"Serial Configuration",id:"serial-configuration",level:3},{value:"Serial Receiver Provider",id:"serial-receiver-provider",level:3},{value:"ADC Configuration",id:"adc-configuration",level:3},{value:"Bus Configuration",id:"bus-configuration",level:3},{value:"LED Configuration",id:"led-configuration",level:3},{value:"OSD Configuration",id:"osd-configuration",level:3},{value:"VTX Configuration",id:"vtx-configuration",level:3}],f={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-create-a-flight-controller-configuration-file-for-betaflight-45"},"How to Create a Flight Controller Configuration File for Betaflight 4.5"),(0,i.kt)("p",null,"Under construction."),(0,i.kt)("p",null,"This document describes how to create a flight controller configuration file for Betaflight 4.5 and is a work in progress."),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Firmware 4.5 no longer uses unified-targets but instead uses a configuration file for each flight controller.\nThis guide will walk you through the process of creating a configuration file."),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a new configuration file in the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/betaflight/config"},"config repository"),"."),(0,i.kt)("li",{parentName:"ol"},"The configuration file consists of defines and is independant from using CLI commands. All defines are in the format ",(0,i.kt)("inlineCode",{parentName:"li"},"#define <setting> [value]"),"."),(0,i.kt)("li",{parentName:"ol"},"Other directives can be used in the configuration file, e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"#ifdef"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"#else")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"#endif"),".")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("h3",{id:"license-information"},"License Information"),(0,i.kt)("p",null,"The license information is used to identify the license of the firmware. The configuration file needs to start with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/*\n * This file is part of Betaflight.\n *\n * Betaflight is free software. You can redistribute this software\n * and/or modify this software under the terms of the GNU General\n * Public License as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later\n * version.\n *\n * Betaflight is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public\n * License along with this software.\n *\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n#pragma once\n\n")),(0,i.kt)("h3",{id:"board-configuration"},"Board Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#define FC_TARGET_MCU ATF435M\n#define BOARD_NAME AIRBOTF435\n#define MANUFACTURER_ID AIRB\n")),(0,i.kt)("h3",{id:"hardware-defines"},"Hardware Defines"),(0,i.kt)("p",null,"For a list of hardware defines please see ","[Hardware Defines]","(manufacturer-design-guidelines## 4.2 Definitions for Targets)"),(0,i.kt)("h3",{id:"pin-resources"},"Pin Resources"),(0,i.kt)("p",null,"The pin resources are used to configure the pins on the flight controller."),(0,i.kt)("h3",{id:"timer-and-dma-resources"},"Timer and Dma Resources"),(0,i.kt)("p",null,"The timer and DMA resources are used to configure the timers and DMA on the flight controller.\nConfigure the timer in CLI:"),(0,i.kt)("p",null,"Example using a STM32F722:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#timer\ntimer A00 AF2\n# pin A00: TIM5 CH1 (AF2)\ntimer A01 AF2\n# pin A01: TIM5 CH2 (AF2)\ntimer A02 AF2\n# pin A02: TIM5 CH3 (AF2)\ntimer A03 AF2\n# pin A03: TIM5 CH4 (AF2)\ntimer B00 AF2\n# pin B00: TIM3 CH3 (AF2)\ntimer B01 AF2\n# pin B01: TIM3 CH4 (AF2)\ntimer C07 AF3\n# pin C07: TIM8 CH2 (AF3)\ntimer C08 AF3\n# pin C08: TIM8 CH3 (AF3)\ntimer C09 AF3\n# pin C09: TIM8 CH4 (AF3)\n")),(0,i.kt)("p",null,"Also set the DMA options, so the command ",(0,i.kt)("inlineCode",{parentName:"p"},"timer map")," outputs the right values, else they will be ",(0,i.kt)("inlineCode",{parentName:"p"},"-1")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"dmaopt")," (which is unused)."),(0,i.kt)("p",null,"e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dma pin A01 0\n# pin A01: DMA1 Stream 4 Channel 6\ndma pin A00 0\n# pin A00: DMA1 Stream 2 Channel 6\n")),(0,i.kt)("p",null,"The below is an example of the output after running timer map in CLI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#timer map\n\nTimer Mapping:\n TIMER_PIN_MAP(0, PA0, 2, 0)\n TIMER_PIN_MAP(1, PA1, 2, 0)\n TIMER_PIN_MAP(2, PA2, 2, -1)\n TIMER_PIN_MAP(3, PA3, 2, -1)\n TIMER_PIN_MAP(4, PB0, 2, 0)\n TIMER_PIN_MAP(5, PB1, 2, 0)\n TIMER_PIN_MAP(6, PC7, 2, -1)\n TIMER_PIN_MAP(7, PC8, 2, -1)\n TIMER_PIN_MAP(8, PC9, 2, -1)\n")),(0,i.kt)("p",null,"To enable the ",(0,i.kt)("inlineCode",{parentName:"p"},"timer map")," command you need to add the define ",(0,i.kt)("inlineCode",{parentName:"p"},"USE_TIMER_MAP_PRINT")," so use either:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'make TARGET EXTRA_FLAGS="-DUSE_TIMER_MAP_PRINT"\n')),(0,i.kt)("h3",{id:"serial-configuration"},"Serial Configuration"),(0,i.kt)("p",null,"The serial configuration is used to configure the serial ports on the flight controller. The following defines are available:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"right"},"Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Function define"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"1"),(0,i.kt)("td",{parentName:"tr",align:null},"MSP_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"2"),(0,i.kt)("td",{parentName:"tr",align:null},"GPS_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"64"),(0,i.kt)("td",{parentName:"tr",align:null},"SERIALRX_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"32"),(0,i.kt)("td",{parentName:"tr",align:null},"SBUS_TELEMETRY_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"1024"),(0,i.kt)("td",{parentName:"tr",align:null},"ESC_SENSOR_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"2048"),(0,i.kt)("td",{parentName:"tr",align:null},"VTX_SMARTAUDIO_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"8192"),(0,i.kt)("td",{parentName:"tr",align:null},"VTX_TRAMP_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"131072"),(0,i.kt)("td",{parentName:"tr",align:null},"VTX_MSP_UART")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"right"},"131073"),(0,i.kt)("td",{parentName:"tr",align:null},"MSP_DISPLAYPORT_UART")))),(0,i.kt)("p",null,"The following example shows how to configure the serial ports for a flight controller with a GPS and SmartAudio VTX."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#define SERIALRX_UART SERIAL_PORT_USART1\n#define VTX_SMARTAUDIO_UART SERIAL_PORT_USART3\n#define GPS_UART SERIAL_PORT_USART4\n")),(0,i.kt)("p",null,"Note: serial command is zero index based, so the first serial port is ",(0,i.kt)("inlineCode",{parentName:"p"},"SERIAL_PORT_USART1")," and not ",(0,i.kt)("inlineCode",{parentName:"p"},"SERIAL_PORT_USART0"),"."),(0,i.kt)("h3",{id:"serial-receiver-provider"},"Serial Receiver Provider"),(0,i.kt)("p",null,"BNF boards may want to configure the serial receiver provider on the flight controller. Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#define SERIALRX_PROVIDER CRSF\n")),(0,i.kt)("h3",{id:"adc-configuration"},"ADC Configuration"),(0,i.kt)("p",null,"The ADC configuration is used to configure the ADC on the flight controller."),(0,i.kt)("h3",{id:"bus-configuration"},"Bus Configuration"),(0,i.kt)("p",null,"The bus configuration is used to configure the I2C and SPI buses on the flight controller."),(0,i.kt)("h3",{id:"led-configuration"},"LED Configuration"),(0,i.kt)("p",null,"The LED configuration is used to configure the LED on the flight controller."),(0,i.kt)("h3",{id:"osd-configuration"},"OSD Configuration"),(0,i.kt)("p",null,"The OSD configuration is used to configure the OSD on the flight controller."),(0,i.kt)("h3",{id:"vtx-configuration"},"VTX Configuration"),(0,i.kt)("p",null,"The VTX configuration is used to configure the VTX on the flight controller."))}c.isMDXComponent=!0}}]);