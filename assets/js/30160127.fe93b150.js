"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8779],{15191:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var r=t(85893),s=t(11151);const a={},i="VTX CLI Settings",o={id:"support/archive/VTX-CLI-Settings",title:"VTX CLI Settings",description:"As of Betaflight version 3.3.0, the CLI settings below can be used to",source:"@site/docs/support/archive/VTX-CLI-Settings.md",sourceDirName:"support/archive",slug:"/support/archive/VTX-CLI-Settings",permalink:"/docs/support/archive/VTX-CLI-Settings",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"support",previous:{title:"Unified Targets for users",permalink:"/docs/support/archive/Unified-Targets"},next:{title:"VTX Tables",permalink:"/docs/support/archive/VTX-Tables"}},l={},h=[{value:"Change vtx power level using aux channel",id:"change-vtx-power-level-using-aux-channel",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"vtx-cli-settings",children:"VTX CLI Settings"}),"\n",(0,r.jsxs)(n.p,{children:["As of Betaflight version 3.3.0, the CLI settings below can be used to\nconfigure addressable video transmitters (such as\nTBS-",(0,r.jsx)(n.a,{href:"Unify-Smartaudio",children:"SmartAudio"}),"\nand\nIRC-",(0,r.jsx)(n.a,{href:"IRC-Tramp",children:"Tramp"}),(0,r.jsx)(n.a,{href:"IRC-Tramp",children:")"}),"\nthat are connected to the flight controller.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","At startup the settings are applied to the transmitter.\xa0 If the video\nconfiguration is modified via the ",(0,r.jsx)(n.a,{href:"Unify-Smartaudio#smartaudio-cms-guide",children:"CMS OSD\nmenu"}),"\nor via MSP (Taranis/OpenTX smartport\n'",(0,r.jsx)(n.a,{href:"https://github.com/betaflight/betaflight-tx-lua-scripts",children:"lua"}),"'), the\nsettings are updated.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","One nice thing the settings can provide is a way to configure a\nfrequency (via USB / CLI) while the video transmitter is not powered\nup.\xa0 After a save and power cycle, the system will startup at the new\nfrequency.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","There is a 'vtx_freq' setting that operates as follows:\xa0 If\nvtx_band=0 and vtx_freq!=0 then the 'vtx_freq' value (in MHz) will be\nconfigured on the transmitter at startup.\xa0 If both are zero then the\nsettings will be ignored.\xa0 If vtx_band!=0 and a video transmitter is\nconnected then 'vtx_freq' will be set to the current frequency value\n(in MHz) at startup.\\"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Values for settings like vtx_band, vtx_channel, vtx_power are relevant for Betaflight versions prior to 4.1 which had these default values built in. In Betaflight 4.1 and newer to control your VTX you must configure a ",(0,r.jsx)(n.a,{href:"VTX-tables",children:"VTX Table"})," in which you define your own bands, channels and power settings based on local regulations."]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"vtx_band = #"}),(0,r.jsx)(n.br,{}),"\n","Allowed range: 0 - 5",(0,r.jsx)(n.br,{}),"\n","0=user, 1=A, 2=B, 3=E, 4=F(Airwaves/Fatshark), 5=Raceband",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"vtx_channel = #"}),(0,r.jsx)(n.br,{}),"\n","Allowed range: 1 - 8",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"vtx_power = #"}),(0,r.jsx)(n.br,{}),"\n","Allowed range: 0 - 5",(0,r.jsx)(n.br,{}),"\n","for SmartAudio:\xa0 0=25mW, 1=25mW, 2=200mW, 3=500mW, 4=800mW",(0,r.jsx)(n.br,{}),"\n","for TBS Unify Nano:\xa0 0=25mW, 1=25mW, 2=50mW",(0,r.jsx)(n.br,{}),"\n","for IRC-Tramp:\xa0 0=25mW, 1=25mW, 2=100mW, 3=200mW, 4=400mW, 5=600mW",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"vtx_low_power_disarm = ON|OFF"}),(0,r.jsx)(n.br,{}),"\n","If ON and the flight controller is disarmed, the video transmitter output power will be set to its lowest value (vtx_power=1). Otherwise, the video transmitter output power will be set to the configured 'vtx_power' value. (Note one exception: If a receiver failsafe has occurred then the output power will not be lowered.)",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"vtx_freq = ####"}),(0,r.jsx)(n.br,{}),"\n","Allowed range: 0 - 5999",(0,r.jsx)(n.br,{}),"\n","if vtx_band!=0 and VTX connected then shows freq in MHz",(0,r.jsx)(n.br,{}),"\n","if vtx_band==0 then sets frequency in MHz",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","if vtx_band==0 and vtx_freq==0 then the settings will not be sent out\nto the VTX",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","For example, to configure the VTX to use band 'F' and channel '6' (5840\nMHz), enter the CLI and input:",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","set vtx_band = 4",(0,r.jsx)(n.br,{}),"\n","set vtx_channel = 6",(0,r.jsx)(n.br,{}),"\n","save",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","The VTX configuration will not be changed until after the 'save' and\nrestart.\xa0 If it is successful then entering 'get vtx_freq' will show\nthe current frequency value in MHz.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Frequency table"}),":",(0,r.jsx)(n.br,{}),"\n","\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Channel",(0,r.jsx)(n.br,{}),"\n","\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0\xa0\xa0\xa0 1\xa0\xa0\xa0\xa0\xa0\xa0 2\xa0\xa0\xa0\xa0\xa0\xa0 3\xa0\xa0\xa0\xa0\xa0\xa0 4\xa0\xa0\xa0\xa0\xa0\xa0 5\xa0\xa0\xa0\xa0\xa0\xa0 6\xa0\xa0\xa0\xa0\xa0\xa07\xa0\xa0\xa0\xa0\xa0\xa0 8",(0,r.jsx)(n.br,{}),"\n","Band 1:\xa0 5865 5845 5825 5805 5785 5765 5745 5725\xa0 (A: Boscam A / TBS /\nRC305)",(0,r.jsx)(n.br,{}),"\n","Band 2:\xa0 5733 5752 5771 5790 5809 5828 5847 5866\xa0 (B: Boscam B)",(0,r.jsx)(n.br,{}),"\n","Band 3:\xa0 5705 5685 5665 5645 5885 5905 5925 5945\xa0 (E: Boscam E / DJI)",(0,r.jsx)(n.br,{}),"\n","Band 4:\xa0 5740 5760 5780 5800 5820 5840 5860 5880\xa0 (F: IRC NexWave /\nFatshark)",(0,r.jsx)(n.br,{}),"\n","Band 5:\xa0 5658 5695 5732 5769 5806 5843 5880 5917\xa0 (R: Raceband)",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.br,{}),"\n","See ",(0,r.jsx)(n.a,{href:"http://www.etheli.com/freq/FPV_5.8GHz_Freqs.jpg",children:'here for a 5.8GHz FPV "Visual" Frequency\nChart'})]}),"\n",(0,r.jsx)(n.h3,{id:"change-vtx-power-level-using-aux-channel",children:"Change vtx power level using aux channel"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"vtx - vtx channels on switch\n\t<index> <aux_channel> <vtx_band> <vtx_channel> <vtx_power> <start_range> <end_range>\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example the following will configure a 3-position switch on Aux3 to switch power levels 1/2/3."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"vtx 0 2 0 0 1 900 1200\nvtx 1 2 0 0 2 1300 1700\nvtx 2 2 0 0 3 1800 2100\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that the aux channel value supplied to the ",(0,r.jsx)(n.code,{children:"vtx"})," command is zero-based. This means 0 = Aux1, 1 = Aux2, and so on. So in the example ",(0,r.jsx)(n.code,{children:"2"})," represents Aux3."]}),"\n",(0,r.jsxs)(n.p,{children:["This can also be used to switch to specific band/channels based on a switch but since the band/channel in the example above are 0 it won't change channels - only power. Whenever the ",(0,r.jsx)(n.code,{children:"vtx_band"}),", ",(0,r.jsx)(n.code,{children:"vtx_channel"}),", or ",(0,r.jsx)(n.code,{children:"vtx_power"})," values are 0 it means to leave the current setting unchanged. See the help for the vtx command."]}),"\n",(0,r.jsxs)(n.p,{children:["If Low Power Disarm is enabled, it will override changes made by the ",(0,r.jsx)(n.code,{children:"vtx"})," command."]}),"\n",(0,r.jsx)(n.p,{children:"And for the OSD element:"}),"\n",(0,r.jsx)(n.p,{children:"Enable the vtx Channel element on the OSD tab to display vtx channel and power."})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>i});var r=t(67294);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);