"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6646],{83453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(85893),r=n(11151);const s={},o="Unified Targets for users",a={id:"support/archive/Unified-Targets",title:"Unified Targets for users",description:"- Determine the target to use.",source:"@site/docs/support/archive/Unified-Targets.md",sourceDirName:"support/archive",slug:"/support/archive/Unified-Targets",permalink:"/docs/support/archive/Unified-Targets",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"support",previous:{title:"Tuning Tips for BF 3.4",permalink:"/docs/support/archive/Tuning-Tips-for-Betaflight-3.4"},next:{title:"VTX CLI Settings",permalink:"/docs/support/archive/VTX-CLI-Settings"}},h={},c=[{value:"Working on firmware",id:"working-on-firmware",level:2},{value:"Combine and flash with the configurator",id:"combine-and-flash-with-the-configurator",level:3},{value:"make_config_hex.sh",id:"make_config_hexsh",level:3}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"unified-targets-for-users",children:"Unified Targets for users"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Determine the target to use."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://betaflight.com/assets/img/identify_target.png",alt:"Image that shows where to find the target name"})}),"\n",(0,i.jsx)(t.p,{children:"The CLI is another method to get the target name."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"# version\n# Betaflight / STM32F411 (S411) 4.2.0 Jun 14 2020 / 03:04:43 (8f2d21460) MSP API: 1.43\n# config: manufacturer_id: MTKS, board_name: MATEKF411, version: be0c9205, date: 2020-01-15T19:44:32Z\n# board: manufacturer_id: MTKS, board_name: MATEKF411\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The MCU target is ",(0,i.jsx)(t.code,{children:"STM32F411"})," and unified target config is ",(0,i.jsx)(t.code,{children:"MATEKF411"})," as the board_name describes the board type config.\nThe manufacturer is required to maintain a unified target configuration file."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Choose your target"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"MATEKF411 <-- Unified target\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"After you hit load firmware on the Firmware Flasher tab you will get the following release info:"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Target: MATEKF411\nManufacturer ID: MTKS\nVersion: 4.2.0\nBinary: betaflight_4.2.0_STM32F411.hex\nDate: 14-06-2020 08:40\nUnified Target: MTKS-MATEKF411.config\nDate: 2020-01-15T19:44:32Z\n"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"FAQ"}),":\nWhat is Manufacturer ID: ",(0,i.jsx)(t.code,{children:"MTKS"}),"\nWhat do these four letters mean? They refer to the manufacturer of the board. The list is available in ",(0,i.jsx)(t.a,{href:"https://github.com/betaflight/unified-targets/blob/master/Manufacturers.md",children:"Manufacterers.md"})]}),"\n",(0,i.jsxs)(t.p,{children:["Tip: remember to save a backup of your config, like as a ",(0,i.jsx)(t.code,{children:"diff"}),", ",(0,i.jsx)(t.em,{children:"before"})," you flash a new version of betaflight.\n",(0,i.jsx)(t.strong,{children:"Please note"})," it is only save to import certain settings back. If unsure please start with a fresh configuration."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Load Firmware [Online]"})," then ",(0,i.jsx)(t.code,{children:"Flash Firmware"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Connect to configurator, click on ",(0,i.jsx)(t.code,{children:"Apply Custom Defaults"})," when prompted:\n",(0,i.jsx)(t.img,{src:"https://betaflight.com/assets/img/apply_custom_defaults_prompt.png",alt:"Picture of a notice that asks the user to apply custom defaults"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If you are having an issue with the unified target, try the legacy target for now, and file an issue on the ",(0,i.jsx)(t.a,{href:"https://github.com/betaflight/betaflight/issues",children:"Issue Tracker"})," if the unified target is missing anything that it should have."]}),"\n",(0,i.jsx)(t.p,{children:"Todo: which target for example?, also needs some images."}),"\n",(0,i.jsx)(t.h1,{id:"tips-for-working-with-unified-targets",children:"Tips for working with Unified targets"}),"\n",(0,i.jsx)(t.h2,{id:"working-on-firmware",children:"Working on firmware"}),"\n",(0,i.jsxs)(t.p,{children:["Save a copy of the unified target to your computer from ",(0,i.jsx)(t.a,{href:"https://github.com/betaflight/unified-targets/tree/master/configs/default",children:"the repository"}),", lets use ",(0,i.jsx)(t.code,{children:"MTKS-MATEKF411.config"})," as an example."]}),"\n",(0,i.jsx)(t.p,{children:"Open up the file in a text editor and take a look at the first line."}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["# Betaflight / ",(0,i.jsx)(t.strong,{children:"STM32F411"})," (S411) 4.1.0 Jun 25 2019 / 10:27:57 (2a6e94d03) MSP API: 1.42"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["In this case, ",(0,i.jsx)(t.code,{children:"STM32F411"})," is the processor target used, so when you compile a target you'll want to use ",(0,i.jsx)(t.code,{children:"make TARGET=STM32F411"})]}),"\n",(0,i.jsx)(t.h3,{id:"combine-and-flash-with-the-configurator",children:"Combine and flash with the configurator"}),"\n",(0,i.jsxs)(t.p,{children:["In the configurator load the ",(0,i.jsx)(t.code,{children:".config"})," file first, and then load the ",(0,i.jsx)(t.code,{children:"betaflight_4.x.x_STM32F411.hex"}),", now flash the firmware. On the first connect you will be prompted to ",(0,i.jsx)(t.code,{children:"Apply Custom Defaults"})," just like the regular flashing procedure"]}),"\n",(0,i.jsx)(t.h3,{id:"make_config_hexsh",children:"make_config_hex.sh"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"make_config_hex.sh"})," is a script in ",(0,i.jsx)(t.code,{children:"src/utils"})," that can be used to combine a unified target configuration with a firmware image. The combined .hex may be useful to share with other users of the same flight controller. Users of the combined .hex will be prompted to ",(0,i.jsx)(t.code,{children:"Apply Custom Defaults"}),", just like the regular flashing procedure."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"srec_cat"})," program is part of ",(0,i.jsx)(t.a,{href:"http://srecord.sourceforge.net/",children:"srecord"}),", which is available in ubuntu under universe. ",(0,i.jsx)(t.code,{children:"apt install srecord"})]}),"\n",(0,i.jsxs)(t.p,{children:["Windows binaries to not seem available, but they do have ",(0,i.jsx)(t.a,{href:"http://srecord.sourceforge.net/windows.html",children:"instructions"})]}),"\n",(0,i.jsxs)(t.p,{children:["Take a look at ",(0,i.jsx)(t.a,{href:"https://github.com/betaflight/betaflight/blob/master/src/utils/make_config_hex.sh",children:"src/utils/make_config_hex.sh"})," for more information."]})]})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(67294);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);