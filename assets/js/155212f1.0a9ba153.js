"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8753],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=r,f=h["".concat(s,".").concat(d)]||h[d]||p[d]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[h]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},33507:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i=void 0,l={unversionedId:"Archive/VTX-CLI-Settings",id:"Archive/VTX-CLI-Settings",title:"VTX-CLI-Settings",description:"As of Betaflight version 3.3.0, the CLI settings below can be used to",source:"@site/docs/Archive/VTX-CLI-Settings.md",sourceDirName:"Archive",slug:"/Archive/VTX-CLI-Settings",permalink:"/docs/Archive/VTX-CLI-Settings",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Unified Targets for users",permalink:"/docs/Archive/Unified-Targets"},next:{title:"VTX-Tables",permalink:"/docs/Archive/VTX-Tables"}},s={},c=[{value:"NOTE: Values for settings like vtx_band, vtx_channel, vtx_power are relevant for Betaflight versions prior to 4.1 which had these default values built in. In Betaflight 4.1 and newer to control your VTX you must configure a VTX Table in which you define your own bands, channels and power settings based on local regulations.",id:"note-values-for-settings-like-vtx_band-vtx_channel-vtx_power-are-relevant-for-betaflight-versions-prior-to-41-which-had-these-default-values-built-in-in-betaflight-41-and-newer-to-control-your-vtx-you-must-configure-a-vtx-table-in-which-you-define-your-own-bands-channels-and-power-settings-based-on-local-regulations",level:3},{value:"Change vtx power level using aux channel",id:"change-vtx-power-level-using-aux-channel",level:3}],u={toc:c};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"As of Betaflight version 3.3.0, the CLI settings below can be used to\nconfigure addressable video transmitters (such as\nTBS-",(0,r.kt)("a",{parentName:"p",href:"Unify-Smartaudio"},"SmartAudio"),"\nand\nIRC-",(0,r.kt)("a",{parentName:"p",href:"IRC-Tramp"},"Tramp"),(0,r.kt)("a",{parentName:"p",href:"IRC-Tramp"},")"),"\nthat are connected to the flight controller.\\\n\\\nAt startup the settings are applied to the transmitter.\xa0 If the video\nconfiguration is modified via the ",(0,r.kt)("a",{parentName:"p",href:"Unify-Smartaudio#smartaudio-cms-guide"},"CMS OSD\nmenu"),"\nor via MSP (Taranis/OpenTX smartport\n'",(0,r.kt)("a",{parentName:"p",href:"https://github.com/betaflight/betaflight-tx-lua-scripts"},"lua"),"'), the\nsettings are updated.\\\n\\\nOne nice thing the settings can provide is a way to configure a\nfrequency (via USB / CLI) while the video transmitter is not powered\nup.\xa0 After a save and power cycle, the system will startup at the new\nfrequency.\\\n\\\nThere is a 'vtx_freq' setting that operates as follows:\xa0 If\nvtx_band=0 and vtx_freq!=0 then the 'vtx_freq' value (in MHz) will be\nconfigured on the transmitter at startup.\xa0 If both are zero then the\nsettings will be ignored.\xa0 If vtx_band!=0 and a video transmitter is\nconnected then 'vtx_freq' will be set to the current frequency value\n(in MHz) at startup.\\"),(0,r.kt)("h3",{id:"note-values-for-settings-like-vtx_band-vtx_channel-vtx_power-are-relevant-for-betaflight-versions-prior-to-41-which-had-these-default-values-built-in-in-betaflight-41-and-newer-to-control-your-vtx-you-must-configure-a-vtx-table-in-which-you-define-your-own-bands-channels-and-power-settings-based-on-local-regulations"},"NOTE: Values for settings like vtx_band, vtx_channel, vtx_power are relevant for Betaflight versions prior to 4.1 which had these default values built in. In Betaflight 4.1 and newer to control your VTX you must configure a ",(0,r.kt)("a",{parentName:"h3",href:"https://github.com/betaflight/betaflight/wiki/VTX-tables"},"VTX Table")," in which you define your own bands, channels and power settings based on local regulations."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"vtx_band = ","#"),"\\\nAllowed range: 0 - 5\\\n0=user, 1=A, 2=B, 3=E, 4=F(Airwaves/Fatshark), 5=Raceband\\\n\\\n",(0,r.kt)("strong",{parentName:"p"},"vtx_channel = ","#"),"\\\nAllowed range: 1 - 8\\\n\\\n",(0,r.kt)("strong",{parentName:"p"},"vtx_power = ","#"),"\\\nAllowed range: 0 - 5\\\nfor SmartAudio:\xa0 0=25mW, 1=25mW, 2=200mW, 3=500mW, 4=800mW\\\nfor TBS Unify Nano:\xa0 0=25mW, 1=25mW, 2=50mW\\\nfor IRC-Tramp:\xa0 0=25mW, 1=25mW, 2=100mW, 3=200mW, 4=400mW, 5=600mW\\\n\\\n",(0,r.kt)("strong",{parentName:"p"},"vtx_low_power_disarm = ON|OFF"),"\\\nIf ON and the flight controller is disarmed, the video transmitter output power will be set to its lowest value (vtx_power=1). Otherwise, the video transmitter output power will be set to the configured 'vtx_power' value. (Note one exception: If a receiver failsafe has occurred then the output power will not be lowered.)\\\n\\\n",(0,r.kt)("strong",{parentName:"p"},"vtx_freq = ","#","#","#","#"),"\\\nAllowed range: 0 - 5999\\\nif vtx_band!=0 and VTX connected then shows freq in MHz\\\nif vtx_band==0 then sets frequency in MHz\\\n\\\nif vtx_band==0 and vtx_freq==0 then the settings will not be sent out\nto the VTX\\\n\\\nFor example, to configure the VTX to use band 'F' and channel '6' (5840\nMHz), enter the CLI and input:\\\n\\\nset vtx_band = 4\\\nset vtx_channel = 6\\\nsave\\\n\\\nThe VTX configuration will not be changed until after the 'save' and\nrestart.\xa0 If it is successful then entering 'get vtx_freq' will show\nthe current frequency value in MHz.\\\n\\\n",(0,r.kt)("strong",{parentName:"p"},"Frequency table"),":\\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Channel\\\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0\xa0\xa0\xa0 1\xa0\xa0\xa0\xa0\xa0\xa0 2\xa0\xa0\xa0\xa0\xa0\xa0 3\xa0\xa0\xa0\xa0\xa0\xa0 4\xa0\xa0\xa0\xa0\xa0\xa0 5\xa0\xa0\xa0\xa0\xa0\xa0 6\xa0\xa0\xa0\xa0\xa0\xa07\xa0\xa0\xa0\xa0\xa0\xa0 8\\\nBand 1:\xa0 5865 5845 5825 5805 5785 5765 5745 5725\xa0 (A: Boscam A / TBS /\nRC305)\\\nBand 2:\xa0 5733 5752 5771 5790 5809 5828 5847 5866\xa0 (B: Boscam B)\\\nBand 3:\xa0 5705 5685 5665 5645 5885 5905 5925 5945\xa0 (E: Boscam E / DJI)\\\nBand 4:\xa0 5740 5760 5780 5800 5820 5840 5860 5880\xa0 (F: IRC NexWave /\nFatshark)\\\nBand 5:\xa0 5658 5695 5732 5769 5806 5843 5880 5917\xa0 (R: Raceband)\\\n\\\nSee ",(0,r.kt)("a",{parentName:"p",href:"http://www.etheli.com/freq/FPV_5.8GHz_Freqs.jpg"},'here for a 5.8GHz FPV "Visual" Frequency\nChart')),(0,r.kt)("h3",{id:"change-vtx-power-level-using-aux-channel"},"Change vtx power level using aux channel"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vtx - vtx channels on switch\n    <index> <aux_channel> <vtx_band> <vtx_channel> <vtx_power> <start_range> <end_range>\n")),(0,r.kt)("p",null,"For example the following will configure a 3-position switch on Aux3 to switch power levels 1/2/3."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vtx 0 2 0 0 1 900 1200\nvtx 1 2 0 0 2 1300 1700\nvtx 2 2 0 0 3 1800 2100\n")),(0,r.kt)("p",null,"Note that the aux channel value supplied to the ",(0,r.kt)("inlineCode",{parentName:"p"},"vtx")," command is zero-based. This means 0 = Aux1, 1 = Aux2, and so on. So in the example ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," represents Aux3."),(0,r.kt)("p",null,"This can also be used to switch to specific band/channels based on a switch but since the band/channel in the example above are 0 it won't change channels - only power. Whenever the ",(0,r.kt)("inlineCode",{parentName:"p"},"vtx_band"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vtx_channel"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"vtx_power")," values are 0 it means to leave the current setting unchanged. See the help for the vtx command."),(0,r.kt)("p",null,"If Low Power Disarm is enabled, it will override changes made by the ",(0,r.kt)("inlineCode",{parentName:"p"},"vtx")," command."),(0,r.kt)("p",null,"And for the OSD element:"),(0,r.kt)("p",null,"Enable the vtx Channel element on the OSD tab to display vtx channel and power."))}h.isMDXComponent=!0}}]);