"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3325],{98718:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var i=n(85893),s=n(11151);const t={},a=void 0,o={id:"wiki/boards/BLUEJAYF4",title:"BLUEJAYF4",description:"Description",source:"@site/docs/wiki/boards/BLUEJAYF4.md",sourceDirName:"wiki/boards",slug:"/wiki/boards/BLUEJAYF4",permalink:"/docs/wiki/boards/BLUEJAYF4",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"BeeRotor F4",permalink:"/docs/wiki/boards/BEEROTORF4"},next:{title:"CL_RACING AIO F4",permalink:"/docs/wiki/boards/CLRACINGF4"}},l={},d=[{value:"Description",id:"description",level:2},{value:"MCU, Sensors and Features",id:"mcu-sensors-and-features",level:2},{value:"Hardware",id:"hardware",level:3},{value:"Features",id:"features",level:3},{value:"Manufacturers and Distributors",id:"manufacturers-and-distributors",level:2},{value:"Hardware Designs (if available)",id:"hardware-designs-if-available",level:2},{value:"Variants",id:"variants",level:2},{value:"Configuration Information",id:"configuration-information",level:2},{value:"Wiring Diagrams",id:"wiring-diagrams",level:3},{value:"FrSky Smartport",id:"frsky-smartport",level:3},{value:"Serial Wire Debug",id:"serial-wire-debug",level:3},{value:"Example",id:"example",level:3}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(r.p,{children:"Beautifully simple STM32F4 based flightcontroller. An F4 replacement for the Naze."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573427/4e0d21f2-cf38-11e6-893d-73e1eb90bfd0.png",alt:"BlueJayF4 - rev3"})}),"\n",(0,i.jsx)(r.p,{children:"Two variants (in multiple revisions). The full size, 36x36mm (30.5x30.5 mounting holes) and a 25x25mm (20x20 mounting holes) mini version."}),"\n",(0,i.jsx)(r.h2,{id:"mcu-sensors-and-features",children:"MCU, Sensors and Features"}),"\n",(0,i.jsx)(r.h3,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"MCU: STM32F405RTG6"}),"\n",(0,i.jsx)(r.li,{children:"IMU: ICM-20602 (SPI) rev4, ICM-20608-G (SPI) rev3 (and mini), and MPU9250 (SPI) rev1 and rev2"}),"\n",(0,i.jsx)(r.li,{children:"IMU Interrupt: Yes"}),"\n",(0,i.jsx)(r.li,{children:"BARO: Optional on full size, not available on mini."}),"\n",(0,i.jsx)(r.li,{children:"VCP: Yes"}),"\n",(0,i.jsx)(r.li,{children:"Hardware UARTS: 3 (4 on full size with Quad motor remapping)"}),"\n",(0,i.jsx)(r.li,{children:"OSD: Compatible pinouts for MinimOSD on UART3 (stackable) on full size board"}),"\n",(0,i.jsx)(r.li,{children:"Blackbox: Yes (16mb rev3, 2mb rev1), SD card for rev2 and rev3 full size (no SD card on mini)"}),"\n",(0,i.jsx)(r.li,{children:"PPM/UART Shared: UART6"}),"\n",(0,i.jsx)(r.li,{children:"Battery Voltage Sensor: Yes, directly connected, no wiring necessary (if using pololu on full size), wiring required to vbat supply on PDB if using mini"}),"\n",(0,i.jsx)(r.li,{children:"Integrated Voltage Regulator: Pololu piggy back option on full size rev3 and rev4"}),"\n",(0,i.jsx)(r.li,{children:"Button for putting board into DFU mode"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Current Sensor: available as ADC input, but requires shunt circuit on PDB or battery cable."}),"\n",(0,i.jsx)(r.li,{children:"BlHeli passthrough: Yes"}),"\n",(0,i.jsx)(r.li,{children:"WS2811 Led Strip: Yes (on motor output Pin 5)"}),"\n",(0,i.jsx)(r.li,{children:"Transponder: No"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"manufacturers-and-distributors",children:"Manufacturers and Distributors"}),"\n",(0,i.jsx)(r.p,{children:"These boards (full and mini) are available at some online RC stores, and directly from the manufacturer BlueJayRC."}),"\n",(0,i.jsxs)(r.p,{children:["Available here: ",(0,i.jsx)(r.a,{href:"https://bluejayrc.com",children:"BlueJayRC.com"})]}),"\n",(0,i.jsx)(r.h2,{id:"hardware-designs-if-available",children:"Hardware Designs (if available)"}),"\n",(0,i.jsx)(r.p,{children:"The hardware is currently closed source. It may be in the future that older revisions will be made publicly available."}),"\n",(0,i.jsx)(r.h2,{id:"variants",children:"Variants"}),"\n",(0,i.jsx)(r.p,{children:"BlueJayF4 rev1, 2 and 3 - including mini."}),"\n",(0,i.jsxs)(r.p,{children:["Rev3 (mini) (there is also a PDB available)\n",(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573442/6dd9f65e-cf38-11e6-979c-87ccb497e97d.png",alt:"bluejayf4-mini"})]}),"\n",(0,i.jsxs)(r.p,{children:["Rev3 (Full Size)\n",(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573427/4e0d21f2-cf38-11e6-893d-73e1eb90bfd0.png",alt:"BlueJayF4 - rev3"})]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573428/4e11abfa-cf38-11e6-9fb7-0153eaf0ff61.jpg",alt:"BlueJayF4 - rev3 - bottom"})}),"\n",(0,i.jsxs)(r.p,{children:["Rev2 (Full Size)\n",(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573437/6458d622-cf38-11e6-9195-baab4166d8d4.jpg",alt:"BlueJayF4 - rev2"})]}),"\n",(0,i.jsx)(r.h2,{id:"configuration-information",children:"Configuration Information"}),"\n",(0,i.jsx)(r.h3,{id:"wiring-diagrams",children:"Wiring Diagrams"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Wiring Diagram - rev4",src:n(30420).Z+"",width:"1250",height:"990"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Wiring Diagram - rev3",src:n(34037).Z+"",width:"3000",height:"2000"})}),"\n",(0,i.jsx)(r.h3,{id:"frsky-smartport",children:"FrSky Smartport"}),"\n",(0,i.jsxs)(r.p,{children:["Frysky smartport (or s-port) is inverted, and half duplex. You can modify your X4R or XSR by following the procedure here ",(0,i.jsx)(r.a,{href:"https://blck.mn/2016/06/smartport-the-frsky-x4rs-and-betaflight/",children:"https://blck.mn/2016/06/smartport-the-frsky-x4rs-and-betaflight/"})," and here (for a cleaner modification thats easily switchable between inverted and non-inverted) ",(0,i.jsx)(r.a,{href:"https://blck.mn/2016/12/smartport-frsky-x4rs-and-betaflight-part-2/",children:"https://blck.mn/2016/12/smartport-frsky-x4rs-and-betaflight-part-2/"})]}),"\n",(0,i.jsx)(r.p,{children:"For rev3 users, the addition of a diode on UART1, and the use of the builds in BF3.1 or later allow direct connection of s-port without modifying your RX unit."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/21573182/a800cbbc-cf35-11e6-90a5-ccdb9159eec1.png",alt:""})}),"\n",(0,i.jsx)(r.p,{children:"You will need to run the following in the CLI:"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"set sport_halfduplex=OFF"})}),"\n",(0,i.jsx)(r.h3,{id:"serial-wire-debug",children:"Serial Wire Debug"}),"\n",(0,i.jsx)(r.p,{children:"Serial Wire Debug output is located on the bottom of the board, and provides a pin out compatible with STM32Fx discovery boards to be used as a SWD adapter:"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Wiring Diagram - rev4 SWD",src:n(73675).Z+"",width:"400",height:"359"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"bjf4-swd-rev2",src:n(96839).Z+"",width:"415",height:"284"})}),"\n",(0,i.jsx)(r.h1,{id:"known-issues",children:"Known Issues:"}),"\n",(0,i.jsx)(r.p,{children:"The rev2 requires a resistor mod to prevent the issue of crashing on power up. The rev3 does not have this issue."}),"\n",(0,i.jsxs)(r.p,{children:["Following the picture below to perform the Rev2 resistor modification:\n",(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/17614652/3daa257c-60ab-11e6-8567-ab51625e8e89.png",alt:"resistor-mod"})]}),"\n",(0,i.jsxs)(r.p,{children:["The rev2 onboard regulator is limited in current capacity, and has been replaced with a pololu piggy back option for greater flexibility.\n",(0,i.jsx)(r.img,{src:"https://cloud.githubusercontent.com/assets/6168871/17614559/abe4d650-60aa-11e6-8c85-93ed35a8b04f.jpg",alt:"soldered-pololu"})]}),"\n",(0,i.jsx)(r.h1,{id:"other-resources",children:"Other Resources"}),"\n",(0,i.jsxs)(r.p,{children:["Rcgroups Thread: ",(0,i.jsx)(r.a,{href:"http://www.rcgroups.com/forums/showthread.php?t=2593106",children:"http://www.rcgroups.com/forums/showthread.php?t=2593106"})]}),"\n",(0,i.jsx)(r.h1,{id:"configuring-4th-uart-32-and-later",children:"Configuring 4th UART (3.2 and later)"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"4th hardware UART (UART4) is supported on motor outputs 1 and 2, but it is hidden until explicitly turned on by resource commands."}),"\n",(0,i.jsx)(r.li,{children:"Motor outputs 1 and 2 must be remapped to avoid collision with UART4."}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(r.p,{children:"Below is a sequence of resource commands to configure UART4, shift motor outputs by two (Motor 1 to motor output 3, motor 2 to motor output 4 and so on) and use DEBUG pad for LED strip."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"# Disable functions on motor outputs 5 and 6 so motors can be shifted by two\nresource SERIAL_TX 11 NONE\nresource SERIAL_RX 11 NONE\nresource MOTOR 5 NONE\nresource MOTOR 6 NONE\n\n# Remap LED\nresource LED_STRIP 1 B03\n\n# Remap motors\nresource MOTOR 3 B00\nresource MOTOR 4 B01\nresource MOTOR 1 A02\nresource MOTOR 2 A03\n\n# Configure UART4\nresource SERIAL_TX 4 A00\nresource SERIAL_RX 4 A01\n"})})]})}function u(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},96839:(e,r,n)=>{n.d(r,{Z:()=>i});const i=n.p+"assets/images/bluejayf4-rev2-wiring-swd-c8f4310d1a7b115ff09e38b8375aaa90.jpg"},34037:(e,r,n)=>{n.d(r,{Z:()=>i});const i=n.p+"assets/images/bluejayf4-rev3-wiring-108551743b75f6d4fe603ec76e1e1f3f.jpg"},73675:(e,r,n)=>{n.d(r,{Z:()=>i});const i=n.p+"assets/images/bluejayf4-rev4-wiring-swd-c35ad655070b87719b5b14f40fe29fd2.png"},30420:(e,r,n)=>{n.d(r,{Z:()=>i});const i=n.p+"assets/images/bluejayf4-rev4-wiring-902de7786ab0f96ca7945ae92382d92d.png"},11151:(e,r,n)=>{n.d(r,{Z:()=>o,a:()=>a});var i=n(67294);const s={},t=i.createContext(s);function a(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);