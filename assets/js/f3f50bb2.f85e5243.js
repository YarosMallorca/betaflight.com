"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8739],{92078:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var s=t(85893),i=t(11151);const o={},l="Installing the Linux subsystem",r={id:"development/building/Building-Betaflight-on-Windows-the-Linux-subsystem-way",title:"Installing the Linux subsystem",description:"Your PC must be running a 64-bit version of Windows 10 Anniversary Update or later (build 1607+).",source:"@site/docs/development/building/Building-Betaflight-on-Windows-the-Linux-subsystem-way.md",sourceDirName:"development/building",slug:"/development/building/Building-Betaflight-on-Windows-the-Linux-subsystem-way",permalink:"/docs/development/building/Building-Betaflight-on-Windows-the-Linux-subsystem-way",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Building",permalink:"/docs/category/building"},next:{title:"Building Manual.",permalink:"/docs/development/building/Building-Manual"}},d={},a=[];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",img:"img",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"installing-the-linux-subsystem",children:"Installing the Linux subsystem"}),"\n",(0,s.jsx)(n.p,{children:"Your PC must be running a 64-bit version of Windows 10 Anniversary Update or later (build 1607+)."}),"\n",(0,s.jsx)(n.p,{children:"You will need to restart your PC at least once, so be mentally prepared for that."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=OQIYEPe6DWY",children:"Listening to Kraftwerk"})," is known to increase the success rate of this process."]}),"\n",(0,s.jsxs)(n.p,{children:["First, install the Linux subsystem from this great guide (from which I stole the first sentence): ",(0,s.jsx)(n.a,{href:"https://msdn.microsoft.com/en-us/commandline/wsl/install-win10",children:"https://msdn.microsoft.com/en-us/commandline/wsl/install-win10"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.em,{children:["Note for absolute newbs regarding ",(0,s.jsx)(n.strong,{children:"Ubuntu"})]})," (maybe applies to others, but IDK), when prompted to enter a new UNIX user, be sure to use only lower case. The user name is compared to a regular expression that only allows lower case, but not upper."]}),"\n",(0,s.jsxs)(n.p,{children:["It should look like this:\n",(0,s.jsx)(n.img,{src:"https://i.imgur.com/uj0QPQY.jpg",alt:"Imgur"})]}),"\n",(0,s.jsxs)(n.p,{children:["If you don't see this screen, open a Windows command prompt and enter ",(0,s.jsx)(n.code,{children:"bash"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Note the Ubuntu app installer can pin shortcuts to the Start Menu, or the Task Bar. I tried opening these and I did not get the above screenshot; it was missing the path (/mnt/c/Users/username$), and only showed my username@desktop. Running ",(0,s.jsx)(n.code,{children:"bash"})," from Windows CMD included the expected path."]}),"\n",(0,s.jsx)(n.h1,{id:"configuring-the-linux-subsystem",children:"Configuring the Linux subsystem"}),"\n",(0,s.jsx)(n.p,{children:"You will have to install a few Linux packages."}),"\n",(0,s.jsx)(n.p,{children:"First, the basics. We need Python and Curl. To install those, enter"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"sudo apt install python curl -y"})}),"\n",(0,s.jsx)(n.p,{children:"You can install multiple packages at once. The -Y option says yes to all questions during installation."}),"\n",(0,s.jsx)(n.p,{children:"So far so good, eh?"}),"\n",(0,s.jsx)(n.h1,{id:"cloning-betaflight",children:"Cloning betaflight"}),"\n",(0,s.jsx)(n.p,{children:"If you already have the repository cloned to your computer and do not wish to use git, you can skip this step."}),"\n",(0,s.jsx)(n.p,{children:"To install git, enter:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"sudo apt install git"})}),"\n",(0,s.jsxs)(n.p,{children:["Once that's done, navigate to the folder you want to have the repository cloned to. Use ",(0,s.jsx)(n.code,{children:"cd [folder name]"})," to enter a folder, ",(0,s.jsx)(n.code,{children:"cd .."})," to go up a folder and ",(0,s.jsx)(n.code,{children:"ls"})," to see the current folder's contents. Use ",(0,s.jsx)(n.code,{children:"mkdir [foldername]"})," to create a new folder."]}),"\n",(0,s.jsxs)(n.p,{children:["Once that's done, enter ",(0,s.jsx)(n.code,{children:"git clone https://www.github.com/betaflight/betaflight [foldername]"})," (be sure to have your GitHub login info ready). This will create a new folder within the folder you are in with the name you specified and clone (=download) the Betaflight repo into it."]}),"\n",(0,s.jsx)(n.h1,{id:"building-betaflight",children:"Building Betaflight"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," The file system mapping of WSL is still somewhat experimental, and currently all files on the local disk are mounted into ",(0,s.jsx)(n.code,{children:"/mnt/c"})," on the linux side. They are accessible, but they are mounted with ",(0,s.jsx)(n.code,{children:"root:root"})," permissions. This causes permissioning issues with a lot of things, and amongst them is that it leads to errors when trying to build Betaflight from a repository that was cloned onto the local disk under Windows. Rather than doing this, create a fresh clone in linux under ",(0,s.jsx)(n.code,{children:"/home/\\<username\\>"}),", and build from there."]}),"\n",(0,s.jsxs)(n.p,{children:["To build Betaflight, you have two things left to install. Enter the folder you cloned the Betaflight repo into. The ",(0,s.jsx)(n.code,{children:"ls"})," command should output something like this:\n",(0,s.jsx)(n.img,{src:"https://i.imgur.com/Kd65LfN.jpg",alt:"Imgur"}),"\nIf it doesn't match, you are in the wrong folder. Use the Windows file manager to help if you are lost."]}),"\n",(0,s.jsx)(n.p,{children:"If you are missing a few folders, don't worry, we are going to solve that right now."}),"\n",(0,s.jsxs)(n.p,{children:["First, enter ",(0,s.jsx)(n.code,{children:"sudo apt install build-essential"}),". This is the package that will actually build Betaflight. Then, enter ",(0,s.jsx)(n.code,{children:"sudo make arm_sdk_install"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"UPDATE/NOTE:"})," Using ",(0,s.jsx)(n.strong,{children:"Ubuntu"}),", I had to run ",(0,s.jsx)(n.code,{children:"sudo apt-get update"})," which installed a few updates, ",(0,s.jsx)(n.em,{children:"prior to"})," running ",(0,s.jsx)(n.code,{children:"sudo apt install build-essential"}),". Without the updates, ",(0,s.jsx)(n.code,{children:"sudo apt install build-essential"})," only produced 404 errors."]}),"\n",(0,s.jsx)(n.p,{children:"Once that is done, your system is ready to spit out those sweet hex files."}),"\n",(0,s.jsxs)(n.p,{children:["First use ",(0,s.jsx)(n.code,{children:"make configs"})," to download the board targets. Enter ",(0,s.jsx)(n.code,{children:"make <targetname>"})," to build Betaflight for your chosen board. For example ",(0,s.jsx)(n.code,{children:"make MATEKF411"})," or even ",(0,s.jsx)(n.code,{children:"make MATEKF411 MATEKH743"})," for multiple targets. ",(0,s.jsx)(n.code,{children:"make help"})," is also your friend.\nAlternatively, you can try ",(0,s.jsx)(n.code,{children:"make all"})," if you have some spare time."]}),"\n",(0,s.jsxs)(n.p,{children:["The hex files will be in the ",(0,s.jsx)(n.code,{children:"/obj"})," folder of the betaflight folder"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"TIP:"})," To find your board (and how it should be referenced from the ",(0,s.jsx)(n.code,{children:"make"})," command), see here: ",(0,s.jsx)(n.a,{href:"https://github.com/betaflight/betaflight/tree/master/src/main/target",children:"https://github.com/betaflight/betaflight/tree/master/src/main/target"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"UPDATE/NOTE 2:"})," In order to run ",(0,s.jsx)(n.code,{children:"make test"})," or ",(0,s.jsx)(n.code,{children:"make junittest"})," you will have to install clang (version 10). If you type ",(0,s.jsx)(n.code,{children:"which clang-10"})," in console and get no output, it's not installed. In order to install enter ",(0,s.jsx)(n.code,{children:"sudo apt-get install clang-10"}),". Additionally, you may need to run ",(0,s.jsx)(n.code,{children:"sudo apt-get install libblocksruntime-dev"})," to install a missing library for linking."]}),"\n",(0,s.jsx)(n.h1,{id:"optional-items",children:"Optional items"}),"\n",(0,s.jsxs)(n.p,{children:["If you do not like the default Windows console, you can always install for example ",(0,s.jsx)(n.code,{children:"xterm"}),". This will however also require an X-server running in the Windows host environment. Get it here: ",(0,s.jsx)(n.a,{href:"https://sourceforge.net/projects/xming/",children:"https://sourceforge.net/projects/xming/"})]}),"\n",(0,s.jsx)(n.p,{children:"Then do the following in the Linux subsystem:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"$ sudo apt install xterm"}),"\n",(0,s.jsx)(n.code,{children:"$ sudo apt-get install dbus-x11"}),"\n",(0,s.jsx)(n.code,{children:"$ sudo dbus-uuidgen --ensure"}),"\n",(0,s.jsx)(n.code,{children:"$ xterm --display :0.0 &"})]}),"\n",(0,s.jsx)(n.h1,{id:"root-file-system-location",children:"Root file system location"}),"\n",(0,s.jsxs)(n.p,{children:["The root file system for the Linux Subsystem is available from Windows here:\n",(0,s.jsx)(n.code,{children:"C:\\Users\\\\<username\\>\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs"})]}),"\n",(0,s.jsxs)(n.p,{children:["In earlier iterations of Windows Subsystem for Linux, the Ubuntu file system was at %localappdata%\\Lxss (e.g., ",(0,s.jsx)(n.code,{children:"C:\\Users\\\\<username>\\AppData\\Local\\Lxss"})," But it has now moved to the location mentioned above. Beware there are still a lot of incorrect information about this floating around. Even on MS own site."]}),"\n",(0,s.jsx)(n.p,{children:"Under normal circumstances, avoid doing anything in these folder as much as possible, it might mess up the Linux subsystem."}),"\n",(0,s.jsx)(n.h1,{id:"compiling-unit-tests",children:"Compiling unit tests"}),"\n",(0,s.jsx)(n.p,{children:"To compile unit tests, you need to install two additional packages:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"$ sudo apt-get install clang"}),"\n",(0,s.jsx)(n.code,{children:"$ sudo apt-get install libblocksruntime-dev"})]}),"\n",(0,s.jsx)(n.p,{children:"Then run the following command to compile all unit tests:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"$ make test"})}),"\n",(0,s.jsx)(n.p,{children:"You can also compile them individually as well. For more usage information run this command:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"$ cd ./src/test && make help"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>l});var s=t(67294);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);