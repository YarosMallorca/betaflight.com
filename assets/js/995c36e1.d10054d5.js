"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6077],{45592:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=i(85893),n=i(11151);const a={},s="Rate Calculator",l={id:"wiki/guides/current/Rate-Calculator",title:"Rate Calculator",description:"In order to convert between Betaflight, RaceFlight and FlightOne rates, the converters below can be used. There is also now a converter for Betaflight, Raceflight, KISS, Actual and QuickRates below. Please note that not every curve can be recreated perfectly in a different rate model.",source:"@site/docs/wiki/guides/current/Rate-Calculator.md",sourceDirName:"wiki/guides/current",slug:"/wiki/guides/current/Rate-Calculator",permalink:"/docs/wiki/guides/current/Rate-Calculator",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"Presets Quick Start for Authors",permalink:"/docs/wiki/guides/current/Quick-Start-for-Preset-Authors"},next:{title:"Remapping Motors with Resource Command",permalink:"/docs/wiki/guides/current/Remapping-Motors-with-Resource-Command"}},c={},o=[];function h(e){const t={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"rate-calculator",children:"Rate Calculator"}),"\n",(0,r.jsx)(t.p,{children:"In order to convert between Betaflight, RaceFlight and FlightOne rates, the converters below can be used. There is also now a converter for Betaflight, Raceflight, KISS, Actual and QuickRates below. Please note that not every curve can be recreated perfectly in a different rate model."}),"\n",(0,r.jsx)(t.p,{children:"Actual and Quick rates use max velocity directly as a variable (velocity in degree/sec at maximum stick deflection). If you put rates of a different rate model into the configurator it shows you the corresponding max velocity."}),"\n",(0,r.jsx)(t.p,{children:"RaceFlight/Betaflight/KISS rate chart (converter is not working anymore):"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://apocolipse.github.io/RotorPirates/",children:"https://apocolipse.github.io/RotorPirates/"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Betaflight/Actual rates chart:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.desmos.com/calculator/r5pkxlxhtb",children:"https://www.desmos.com/calculator/r5pkxlxhtb"})}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://kmitchel.github.io/",children:"https://kmitchel.github.io/"})," (divide Center and Max by 1000)"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Betaflight rate tuner and RaceFlight/Betaflight converter:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://erikspen.github.io/betaflightratestuner",children:"https://erikspen.github.io/betaflightratestuner"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Betaflight/Quick rates chart:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://illusionfpv.github.io/",children:"https://illusionfpv.github.io/"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"FlightOne/Betaflight rate converter:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://flightone.com/rates/",children:"https://flightone.com/rates/"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Collection of rate presets and rates of established pilots:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://gist.github.com/microraptor/52f01490f1c7aa86d91e8710556f123b",children:"https://gist.github.com/microraptor/52f01490f1c7aa86d91e8710556f123b"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"More about Actual and Quick rates:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://betaflight.com/docs/wiki/tuning/4.2-Tuning-Notes#New-Rates-modes",children:"https://betaflight.com/docs/wiki/tuning/4.2-Tuning-Notes#New-Rates-modes"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/betaflight/betaflight/pull/9495",children:"https://github.com/betaflight/betaflight/pull/9495"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/betaflight/betaflight/pull/9506",children:"https://github.com/betaflight/betaflight/pull/9506"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Automatically convert Betaflight, Raceflight, KISS, Actual and Quick rates from one type to another"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://rates.metamarc.com/",children:"https://rates.metamarc.com/"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,t,i)=>{i.d(t,{Z:()=>l,a:()=>s});var r=i(67294);const n={},a=r.createContext(n);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);