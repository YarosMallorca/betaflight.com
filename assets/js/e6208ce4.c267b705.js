"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5501],{70336:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(85893),i=r(11151);const a={},s="Rate Calculator",l={id:"support/archive/Rate-Calculator",title:"Rate Calculator",description:"In order to convert between Betaflight, RaceFlight and FlightOne rates, the converters below can be used. There is also now a converter for Betaflight, Raceflight, KISS, Actual and QuickRates below. Please note that not every curve can be recreated perfectly in a different rate model.",source:"@site/docs/support/archive/Rate-Calculator.md",sourceDirName:"support/archive",slug:"/support/archive/Rate-Calculator",permalink:"/docs/support/archive/Rate-Calculator",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"support",previous:{title:"Presets Quick Start for Authors",permalink:"/docs/support/archive/Quick-Start-for-Preset-Authors"},next:{title:"Remapping Motors with Resource Command",permalink:"/docs/support/archive/Remapping-Motors-with-Resource-Command"}},o={},c=[];function h(t){const e={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"rate-calculator",children:"Rate Calculator"}),"\n",(0,n.jsx)(e.p,{children:"In order to convert between Betaflight, RaceFlight and FlightOne rates, the converters below can be used. There is also now a converter for Betaflight, Raceflight, KISS, Actual and QuickRates below. Please note that not every curve can be recreated perfectly in a different rate model."}),"\n",(0,n.jsx)(e.p,{children:"Actual and Quick rates use max velocity directly as a variable (velocity in degree/sec at maximum stick deflection). If you put rates of a different rate model into the configurator it shows you the corresponding max velocity."}),"\n",(0,n.jsx)(e.p,{children:"RaceFlight/Betaflight/KISS rate chart (converter is not working anymore):"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://apocolipse.github.io/RotorPirates/",children:"https://apocolipse.github.io/RotorPirates/"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Betaflight/Actual rates chart:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://www.desmos.com/calculator/r5pkxlxhtb",children:"https://www.desmos.com/calculator/r5pkxlxhtb"})}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:"https://kmitchel.github.io/",children:"https://kmitchel.github.io/"})," (divide Center and Max by 1000)"]}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Betaflight rate tuner and RaceFlight/Betaflight converter:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://erikspen.github.io/betaflightratestuner",children:"https://erikspen.github.io/betaflightratestuner"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Betaflight/Quick rates chart:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://illusionfpv.github.io/",children:"https://illusionfpv.github.io/"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"FlightOne/Betaflight rate converter:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://flightone.com/rates/",children:"https://flightone.com/rates/"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Collection of rate presets and rates of established pilots:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://gist.github.com/microraptor/52f01490f1c7aa86d91e8710556f123b",children:"https://gist.github.com/microraptor/52f01490f1c7aa86d91e8710556f123b"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"More about Actual and Quick rates:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://betaflight.com/docs/support/tuning/4.2-Tuning-Notes#New-Rates-modes",children:"https://betaflight.com/docs/support/tuning/4.2-Tuning-Notes#New-Rates-modes"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://github.com/betaflight/betaflight/pull/9495",children:"https://github.com/betaflight/betaflight/pull/9495"})}),"\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://github.com/betaflight/betaflight/pull/9506",children:"https://github.com/betaflight/betaflight/pull/9506"})}),"\n"]}),"\n",(0,n.jsx)(e.p,{children:"Automatically convert Betaflight, Raceflight, KISS, Actual and Quick rates from one type to another"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:"https://rates.metamarc.com/",children:"https://rates.metamarc.com/"})}),"\n"]})]})}function u(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}},11151:(t,e,r)=>{r.d(e,{Z:()=>l,a:()=>s});var n=r(67294);const i={},a=n.createContext(i);function s(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),n.createElement(a.Provider,{value:e},t.children)}}}]);