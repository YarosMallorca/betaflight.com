"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1191],{1651:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var r=i(85893),t=i(11151);const o={},s="How to Create a Flight Controller Configuration File for Betaflight 4.5",l={id:"development/manufacturer/creating-configuration",title:"How to Create a Flight Controller Configuration File for Betaflight 4.5",description:"Under construction.",source:"@site/docs/development/manufacturer/creating-configuration.md",sourceDirName:"development/manufacturer",slug:"/development/manufacturer/creating-configuration",permalink:"/docs/development/manufacturer/creating-configuration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"How to Create a Target Configuration",permalink:"/docs/development/manufacturer/creating-an-unified-target"},next:{title:"Betaflight Flight Controller Manufacturer Design Guidelines",permalink:"/docs/development/manufacturer/manufacturer-design-guidelines"}},d={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Overview",id:"overview",level:2},{value:"Configuration",id:"configuration",level:2},{value:"License Information",id:"license-information",level:3},{value:"Board Configuration",id:"board-configuration",level:3},{value:"Hardware Defines",id:"hardware-defines",level:3},{value:"Pin Resources",id:"pin-resources",level:3},{value:"Timer and Dma Resources",id:"timer-and-dma-resources",level:3},{value:"Serial Configuration",id:"serial-configuration",level:3},{value:"Serial Receiver Provider",id:"serial-receiver-provider",level:3},{value:"ADC Configuration",id:"adc-configuration",level:3},{value:"Bus Configuration",id:"bus-configuration",level:3},{value:"LED Configuration",id:"led-configuration",level:3},{value:"OSD Configuration",id:"osd-configuration",level:3},{value:"VTX Configuration",id:"vtx-configuration",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"how-to-create-a-flight-controller-configuration-file-for-betaflight-45",children:"How to Create a Flight Controller Configuration File for Betaflight 4.5"}),"\n",(0,r.jsx)(n.p,{children:"Under construction."}),"\n",(0,r.jsx)(n.p,{children:"This document describes how to create a flight controller configuration file for Betaflight 4.5 and is a work in progress."}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:"Firmware 4.5 no longer uses unified-targets but instead uses a configuration file for each flight controller.\nThis guide will walk you through the process of creating a configuration file."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a new configuration file in the ",(0,r.jsx)(n.a,{href:"https://github.com/betaflight/config",children:"config repository"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["The configuration file consists of defines and is independant from using CLI commands. All defines are in the format ",(0,r.jsx)(n.code,{children:"#define <setting> [value]"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Other directives can be used in the configuration file, e.g. ",(0,r.jsx)(n.code,{children:"#ifdef"}),", ",(0,r.jsx)(n.code,{children:"#else"})," and ",(0,r.jsx)(n.code,{children:"#endif"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"license-information",children:"License Information"}),"\n",(0,r.jsx)(n.p,{children:"The license information is used to identify the license of the firmware. The configuration file needs to start with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/*\n * This file is part of Betaflight.\n *\n * Betaflight is free software. You can redistribute this software\n * and/or modify this software under the terms of the GNU General\n * Public License as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later\n * version.\n *\n * Betaflight is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * See the GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public\n * License along with this software.\n *\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n#pragma once\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"board-configuration",children:"Board Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#define FC_TARGET_MCU ATF435M\n#define BOARD_NAME AIRBOTF435\n#define MANUFACTURER_ID AIRB\n"})}),"\n",(0,r.jsx)(n.h3,{id:"hardware-defines",children:"Hardware Defines"}),"\n",(0,r.jsx)(n.p,{children:"For a list of hardware defines please see [Hardware Defines](manufacturer-design-guidelines## 4.2 Definitions for Targets)"}),"\n",(0,r.jsx)(n.h3,{id:"pin-resources",children:"Pin Resources"}),"\n",(0,r.jsx)(n.p,{children:"The pin resources are used to configure the pins on the flight controller."}),"\n",(0,r.jsx)(n.h3,{id:"timer-and-dma-resources",children:"Timer and Dma Resources"}),"\n",(0,r.jsx)(n.p,{children:"The timer and DMA resources are used to configure the timers and DMA on the flight controller.\nConfigure the timer in CLI:"}),"\n",(0,r.jsx)(n.p,{children:"Example using a STM32F722:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#timer\ntimer A00 AF2\n# pin A00: TIM5 CH1 (AF2)\ntimer A01 AF2\n# pin A01: TIM5 CH2 (AF2)\ntimer A02 AF2\n# pin A02: TIM5 CH3 (AF2)\ntimer A03 AF2\n# pin A03: TIM5 CH4 (AF2)\ntimer B00 AF2\n# pin B00: TIM3 CH3 (AF2)\ntimer B01 AF2\n# pin B01: TIM3 CH4 (AF2)\ntimer C07 AF3\n# pin C07: TIM8 CH2 (AF3)\ntimer C08 AF3\n# pin C08: TIM8 CH3 (AF3)\ntimer C09 AF3\n# pin C09: TIM8 CH4 (AF3)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Also set the DMA options, so the command ",(0,r.jsx)(n.code,{children:"timer map"})," outputs the right values, else they will be ",(0,r.jsx)(n.code,{children:"-1"})," for ",(0,r.jsx)(n.code,{children:"dmaopt"})," (which is unused)."]}),"\n",(0,r.jsx)(n.p,{children:"e.g."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"dma pin A01 0\n# pin A01: DMA1 Stream 4 Channel 6\ndma pin A00 0\n# pin A00: DMA1 Stream 2 Channel 6\n"})}),"\n",(0,r.jsx)(n.p,{children:"The below is an example of the output after running timer map in CLI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#timer map\n\nTimer Mapping:\n    TIMER_PIN_MAP(0, PA0, 2, 0)\n    TIMER_PIN_MAP(1, PA1, 2, 0)\n    TIMER_PIN_MAP(2, PA2, 2, -1)\n    TIMER_PIN_MAP(3, PA3, 2, -1)\n    TIMER_PIN_MAP(4, PB0, 2, 0)\n    TIMER_PIN_MAP(5, PB1, 2, 0)\n    TIMER_PIN_MAP(6, PC7, 2, -1)\n    TIMER_PIN_MAP(7, PC8, 2, -1)\n    TIMER_PIN_MAP(8, PC9, 2, -1)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To enable the ",(0,r.jsx)(n.code,{children:"timer map"})," command you need to add the define ",(0,r.jsx)(n.code,{children:"USE_TIMER_MAP_PRINT"})," so use either:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'make TARGET EXTRA_FLAGS="-DUSE_TIMER_MAP_PRINT"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"TIMER_PIN_MAP"})," config statement is broken down as follows:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"TIMER_PIN_MAP(WW, XX, YY, ZZ)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"WW - zero-indexed counter, increment by 1 for each line in the timer map"}),"\n",(0,r.jsx)(n.li,{children:"XX - pin number to set the timer on"}),"\n",(0,r.jsxs)(n.li,{children:["YY - selected instance of the timer configuration where multiple options are available. See your MCU's target timer code for the list of options. For example F772 should reference ",(0,r.jsx)(n.a,{href:"https://github.com/betaflight/betaflight/blob/master/src/main/drivers/stm32/timer_stm32f7xx.c",children:"this timer file"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["ZZ - DMA setting for that timer, same number as used in the ",(0,r.jsx)(n.code,{children:"dma pin <pin number> <dma>"})," command."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"serial-configuration",children:"Serial Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The serial configuration is used to configure the serial ports on the flight controller. The following defines are available:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"Value"}),(0,r.jsx)(n.th,{children:"Function define"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"MSP_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"GPS_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"64"}),(0,r.jsx)(n.td,{children:"SERIALRX_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"32"}),(0,r.jsx)(n.td,{children:"SBUS_TELEMETRY_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1024"}),(0,r.jsx)(n.td,{children:"ESC_SENSOR_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2048"}),(0,r.jsx)(n.td,{children:"VTX_SMARTAUDIO_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"8192"}),(0,r.jsx)(n.td,{children:"VTX_TRAMP_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"131072"}),(0,r.jsx)(n.td,{children:"VTX_MSP_UART"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"131073"}),(0,r.jsx)(n.td,{children:"MSP_DISPLAYPORT_UART"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"The following example shows how to configure the serial ports for receiver, GPS and SmartAudio VTX."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#define SERIALRX_UART SERIAL_PORT_USART1\n#define VTX_SMARTAUDIO_UART SERIAL_PORT_USART3\n#define GPS_UART SERIAL_PORT_USART4\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsxs)(n.p,{children:["Serial command is zero index based, so the first serial port is ",(0,r.jsx)(n.code,{children:"SERIAL_PORT_USART1"})," and not ",(0,r.jsx)(n.code,{children:"SERIAL_PORT_USART0"}),"."]}),(0,r.jsx)("br",{}),(0,r.jsx)(n.p,{children:"The USART is meant to do all of the \u201cheavy lifting\u201d serial communication during periods of \u201chigh\u201d energy consumption."}),(0,r.jsx)("br",{}),(0,r.jsx)(n.p,{children:"When the microcontroller is asleep and in a low power mode, though, the UART peripheral can handle low speed communications while offering a reduced energy footprint. Betaflight has UART4, UART5 and UART9. Other serial ports are USUART as some boards provide LPUART1"})]}),"\n",(0,r.jsx)(n.h3,{id:"serial-receiver-provider",children:"Serial Receiver Provider"}),"\n",(0,r.jsx)(n.p,{children:"BNF boards may want to configure the serial receiver provider on the flight controller. Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#define SERIALRX_PROVIDER CRSF\n"})}),"\n",(0,r.jsx)(n.h3,{id:"adc-configuration",children:"ADC Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The ADC configuration is used to configure the ADC on the flight controller."}),"\n",(0,r.jsx)(n.h3,{id:"bus-configuration",children:"Bus Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The bus configuration is used to configure the I2C and SPI buses on the flight controller."}),"\n",(0,r.jsx)(n.h3,{id:"led-configuration",children:"LED Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The LED configuration is used to configure the LED on the flight controller."}),"\n",(0,r.jsx)(n.h3,{id:"osd-configuration",children:"OSD Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The OSD configuration is used to configure the OSD on the flight controller."}),"\n",(0,r.jsx)(n.h3,{id:"vtx-configuration",children:"VTX Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The VTX configuration is used to configure the VTX on the flight controller."})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var r=i(67294);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);