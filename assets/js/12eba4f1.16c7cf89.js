"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3444],{59365:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});var o=t(85893),i=t(11151);const r={},l="Betaflight 4.4 Cloud Build API",s={id:"development/API/Cloud-Build-API",title:"Betaflight 4.4 Cloud Build API",description:"API",source:"@site/docs/development/API/Cloud-Build-API.mdx",sourceDirName:"development/API",slug:"/development/API/Cloud-Build-API",permalink:"/docs/development/API/Cloud-Build-API",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Bus and External Device Drivers",permalink:"/docs/development/API/BusDrivers"},next:{title:"DisplayPort MSP Extensions",permalink:"/docs/development/API/DisplayPort"}},d={},a=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:2},{value:"Radio Protocols",id:"radio-protocols",level:3},{value:"Telemetry Protocols",id:"telemetry-protocols",level:3},{value:"Other Options",id:"other-options",level:3},{value:"Motor Protocols",id:"motor-protocols",level:3},{value:"Custom Defines",id:"custom-defines",level:3}];function c(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"betaflight-44-cloud-build-api",children:"Betaflight 4.4 Cloud Build API"}),"\n",(0,o.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(n.p,{children:"Avoiding EOL on 512K targets we have introduced a cloud build API saving around 25% of firmware flash usage."}),"\n",(0,o.jsxs)(n.p,{children:["Unified targets define hardware drivers to be included in the firmware as described in the ",(0,o.jsx)(n.a,{href:"/docs/manufacturer/manufacturer-design-guidelines#42-definitions-for-unified-targets",children:"Hardware specification"})]}),"\n",(0,o.jsx)(n.p,{children:"The build log has information about the build in case of failure."}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:["For optimal use please select ONLY the appropiate hardware for the flight controller after selecting the right target (using auto-detect button).\nChoices below are further described in the ",(0,o.jsx)(n.a,{href:"/docs/wiki/configurator/firmware-flasher-tab",children:"wiki/Firmware Flasher page"})]}),"\n",(0,o.jsx)(n.h3,{id:"radio-protocols",children:"Radio Protocols"}),"\n",(0,o.jsx)(n.p,{children:"CRSF\nEXPRESSLRS\nFPORT\nGHOST\nIBUS\nJETIEXBUS\nPPM\nSBUS\nSPECTRUM\nSRXL2\nSUMD\nSUMH\nXBUS"}),"\n",(0,o.jsx)(n.h3,{id:"telemetry-protocols",children:"Telemetry Protocols"}),"\n",(0,o.jsx)(n.p,{children:"FRSKY_HUB\nGHOST\nHOTT\nIBUS_EXTENDED\nJETIEXBUS\nLTM\nMAVLINK\nSMARTPORT\nSRXL"}),"\n",(0,o.jsx)(n.p,{children:"Note: telemetry for CRSF, ELRS, FPORT and GHST are included during the build."}),"\n",(0,o.jsx)(n.h3,{id:"other-options",children:"Other Options"}),"\n",(0,o.jsx)(n.p,{children:"AKK (SA FIX)\nFLASH\nGPS\nLED\nLED64\nMAG\nOSD\nOSD (HD)\nPINIO\nVTX"}),"\n",(0,o.jsx)(n.h3,{id:"motor-protocols",children:"Motor Protocols"}),"\n",(0,o.jsx)(n.p,{children:"BRUSHED\nDSHOT\nMULTISHOT\nONESHOT\nPROSHOT\nPWM"}),"\n",(0,o.jsx)(n.h3,{id:"custom-defines",children:"Custom Defines"}),"\n",(0,o.jsx)(n.p,{children:"ACRO_TRAINER\nBATTERY_CONTINUE\nDASHBOARD\nEMFAT_AUTORUN\nEMFAT_ICON\nESCSERIAL_SIMONK\nGPS\nGPS_PLUS_CODES\nLED_STRIP\nSERIAL_4WAY_SK_BOOTLOADER"})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>l});var o=t(67294);const i={},r=o.createContext(i);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);