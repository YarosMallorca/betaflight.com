"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[47],{35594:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=n(85893),s=n(11151);const t={},o=void 0,a={id:"wiki/boards/OMNIBUS-F4-Pro-Corners",title:"OMNIBUS-F4-Pro-Corners",description:"OMNIBUS F4 Pro Corners",source:"@site/docs/wiki/boards/OMNIBUS-F4-Pro-Corners.md",sourceDirName:"wiki/boards",slug:"/wiki/boards/OMNIBUS-F4-Pro-Corners",permalink:"/docs/wiki/boards/OMNIBUS-F4-Pro-Corners",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"wiki",previous:{title:"Nucleo H743 - RAM based image",permalink:"/docs/wiki/boards/NUCLEOH743 RAM based"},next:{title:"OMNIBUS",permalink:"/docs/wiki/boards/OMNIBUS"}},l={},c=[{value:"OMNIBUS F4 Pro Corners",id:"omnibus-f4-pro-corners",level:2},{value:"Notes",id:"notes",level:2},{value:"Hardware",id:"hardware",level:2},{value:"Configuration Example 1",id:"configuration-example-1",level:2},{value:"Configuration Example 2",id:"configuration-example-2",level:2}];function d(e){const r={code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"omnibus-f4-pro-corners",children:"OMNIBUS F4 Pro Corners"}),"\n",(0,i.jsx)(r.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["3.2.0: Programmable inverter on UART3 (controlled by PC9) is configured, but not activated by default as it interfere with other usages of PC9; users must activate it by ",(0,i.jsx)(r.code,{children:"resource INVERTER 3 C09"})," (see example below)."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Variant of OMNIBUS F4 Pro (OMNIBUSF4SD target). Please refer to OMNIBUS F4 wiki page for additional information."}),"\n",(0,i.jsx)(r.li,{children:"Still uses OMNIBUSF4SD target."}),"\n",(0,i.jsx)(r.li,{children:"Two dual inverters, on UART3 (controlled by PC9) and UART6 (controlled by PC8); supports SBUS and native SmartPort (requires a diode for SmartPort)."}),"\n",(0,i.jsx)(r.li,{children:"UART1_RX can be connected to ESC telemetry via jumper."}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"configuration-example-1",children:"Configuration Example 1"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"UART1 ESC Telemetry"}),"\n",(0,i.jsx)(r.li,{children:"UART3 SBUS"}),"\n",(0,i.jsx)(r.li,{children:"UART6 SmartPort (Inverted, TX-Inline-Diode)"}),"\n",(0,i.jsx)(r.li,{children:"SOFTSERIAL1 SmartAudio"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://user-images.githubusercontent.com/14850998/29904533-3ec5c1f6-8e44-11e7-879f-e1b433b4d8f1.jpg",alt:""})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"# Betaflight / OMNIBUSF4SD (OBSD) 3.2.0 Aug 28 2017 / 12:02:37 (b2cd7294e)\n\n# resources\nresource SERIAL_TX 1 NONE\nresource SERIAL_TX 11 A09\nresource INVERTER 3 C09\n\n# feature\nfeature SOFTSERIAL\nfeature TELEMETRY\nfeature ESC_SENSOR\n\n# serial\nserial 0 1024 115200 57600 0 115200\nserial 2 64 115200 57600 0 115200\nserial 5 32 115200 57600 0 115200\nserial 30 2048 115200 57600 0 115200\n\n# master\nset serialrx_provider = SBUS\nset current_meter = ESC\nset battery_meter = ADC\nset tlm_halfduplex = OFF\n"})}),"\n",(0,i.jsx)(r.h2,{id:"configuration-example-2",children:"Configuration Example 2"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"UART1 ESC Telemetry"}),"\n",(0,i.jsx)(r.li,{children:"UART3 SBUS"}),"\n",(0,i.jsx)(r.li,{children:"UART6 Free (for e.g. GPS)"}),"\n",(0,i.jsx)(r.li,{children:"SOFTSERIAL1 Smartport (UART TX1 pad)"}),"\n",(0,i.jsx)(r.li,{children:"SOFTSERIAL2 IRC Tramp (M5 pad)"}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"https://github.com/stsa64/Quadcopter/blob/master/Omnibus%20F4%20pro%20corner%20diagram.jpg",alt:"Omnibus F4 Pro Corner wiring diagram"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"# Betaflight / OMNIBUSF4SD (OBSD) 3.2.5 Feb 11 2018 / 00:49:36 (6e69ff00c) MSP API: 1.36\n\n# resources\nresource MOTOR 5 NONE\nresource SERIAL_TX 1 NONE\nresource SERIAL_TX 11 A09\nresource SERIAL_TX 12 A01\n\n# feature\nfeature MOTOR_STOP\nfeature SOFTSERIAL\nfeature TELEMETRY\nfeature ESC_SENSOR\n\n# serial\nserial 0 1024 115200 57600 0 115200\nserial 2 64 115200 57600 0 115200\nserial 30 32 115200 57600 0 115200\nserial 31 8192 115200 57600 0 115200\n\n# master\nset serialrx_provider = SBUS\n"})})]})}function u(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>a,a:()=>o});var i=n(67294);const s={},t=i.createContext(s);function o(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);