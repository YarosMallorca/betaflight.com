"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1693],{78336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=n(85893),i=n(11151);const s={},o="Profiles (aka PID Profiles)",l={id:"development/Profiles",title:"Profiles (aka PID Profiles)",description:"A Profile is a set of performance-related configuration settings. PID values, Filter settings, Anti Gravity, Crash Recovery, and more. Currently, 3 Profiles are supported. The default Profile is profile 1 (profile 0 in CLI).",source:"@site/docs/development/Profiles.md",sourceDirName:"development",slug:"/development/Profiles",permalink:"/docs/development/Profiles",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"development",previous:{title:"Parameter Groups",permalink:"/docs/development/ParameterGroups"},next:{title:"RSSI",permalink:"/docs/development/Rssi"}},a={},c=[{value:"Changing profiles",id:"changing-profiles",level:2},{value:"Changing Rate Profiles",id:"changing-rate-profiles",level:2},{value:"Using Diff and Dump to output only Profiles",id:"using-diff-and-dump-to-output-only-profiles",level:2}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"profiles-aka-pid-profiles",children:"Profiles (aka PID Profiles)"}),"\n",(0,r.jsxs)(t.p,{children:["A Profile is a set of performance-related configuration settings. PID values, Filter settings, Anti Gravity, Crash Recovery, and more. Currently, 3 Profiles are supported. The default Profile is profile 1 (",(0,r.jsx)(t.code,{children:"profile 0"})," in CLI)."]}),"\n",(0,r.jsx)(t.p,{children:"Profiles offer another way to perform PID or Filter tuning (currently only Dterm filters). Say that Profile 1 can have default settings you can trust to get in the air and not damage your motors. But you want to try Dterm Bi-quad over PT1, increase P or decrease D values without sacrificing your day of flying. Profiles are perfect for this, edit any Profile when you're at the bench and select the profile when you're in the field. Quad not flying perfectly, merely change your profile back and continue flying."}),"\n",(0,r.jsx)(t.h2,{id:"changing-profiles",children:"Changing profiles"}),"\n",(0,r.jsx)(t.p,{children:"Profiles can be selected using the GUI, CLI, OSD or stick combinations. Once selected, changes to settings can be made and saved to the active Profile. Also worth mentioning when selecting a Profile, that Profile will remain the active Profile even over power cycles."}),"\n",(0,r.jsx)(t.p,{children:"Betaflight Configurator (GUI): In the PID Tuning Tab > Select a Profile using the drop-down menu. Once a profile is chosen, that profile is activated for current use. Any modifications made are saved when pressing Save button."}),"\n",(0,r.jsxs)(t.p,{children:["OSD: Access CMS (Left Yaw + Pitch up) > Select ",(0,r.jsx)(t.code,{children:"Profiles"})," > Change ",(0,r.jsx)(t.code,{children:"PID Prof"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Stick combinations: When disarmed use the following stick commands to select a Profile. The status LED on your FC will flicker when changing the Profile."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Profile"}),(0,r.jsx)(t.th,{children:"Throttle"}),(0,r.jsx)(t.th,{children:"Yaw"}),(0,r.jsx)(t.th,{children:"Pitch"}),(0,r.jsx)(t.th,{children:"Roll"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"0"}),(0,r.jsx)(t.td,{children:"Down"}),(0,r.jsx)(t.td,{children:"Left"}),(0,r.jsx)(t.td,{children:"Middle"}),(0,r.jsx)(t.td,{children:"Left"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1"}),(0,r.jsx)(t.td,{children:"Down"}),(0,r.jsx)(t.td,{children:"Left"}),(0,r.jsx)(t.td,{children:"Up"}),(0,r.jsx)(t.td,{children:"Middle"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"2"}),(0,r.jsx)(t.td,{children:"Down"}),(0,r.jsx)(t.td,{children:"Left"}),(0,r.jsx)(t.td,{children:"Middle"}),(0,r.jsx)(t.td,{children:"Right"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["CLI: the ",(0,r.jsx)(t.code,{children:"profile"})," command can be used to change the profile:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"profile <index>\n"})}),"\n",(0,r.jsx)(t.p,{children:"To save configuration changes:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"save\n"})}),"\n",(0,r.jsx)(t.h1,{id:"rate-profiles",children:"Rate Profiles"}),"\n",(0,r.jsx)(t.p,{children:"A Rate Profile is a set of Rate related settings. These profiles store the settings for Rate Type, RC Rate, Super Rate, Expo for Pitch, Roll, & Yaw. Along with Throttle Expo and TPA settings."}),"\n",(0,r.jsx)(t.p,{children:"Pre-BetaFlight 3.2 Profiles and Rate Profiles are coupled together. Each Profile had its own set of 3 Rate Profiles. Allowing up to 9 Rate Profiles all together.\nBetaflight 3.2 broke this link, giving us independent Profiles and Rate Profiles. Selecting Rate Profiles are independent of Profiles now. Allowing only 3 Rate Profiles.\nBetaFlight 3.3 > the number of Rate Profiles increased from 3 to 6 Rate Profiles."}),"\n",(0,r.jsx)(t.h2,{id:"changing-rate-profiles",children:"Changing Rate Profiles"}),"\n",(0,r.jsx)(t.p,{children:"Rate Profiles can be selected using a GUI, CLI, OSD, or AUX channel. Once selected (just like Profiles), changes to settings can be made and saved to the active Rate Profile. Also, when changing our Rate Profile that profile will remain the active Profile even over power cycles, except when using the AUX channel option. When BetaFlight boots the active profile is selected by the position of the AUX channel."}),"\n",(0,r.jsx)(t.p,{children:"Betaflight Configurator (GUI): Click PID Tuning Tab > Select a Rate Profile using the drop-down menu. Once selected, any changes you make to your settings and click Save will be store to the selected Rate Profile. The action of selecting a Rate Profile also activates that rate profile for current use."}),"\n",(0,r.jsxs)(t.p,{children:["OSD: Access CMS (Left Yaw + Pitch up) > Select ",(0,r.jsx)(t.code,{children:"Profiles"})," > Change ",(0,r.jsx)(t.code,{children:"Rate Prof"}),". Make sure to Save + Exit or Save + Reboot to save settings."]}),"\n",(0,r.jsxs)(t.p,{children:["Aux Channel (In-flight Adjustments): Adjustments need to be configured first using the GUI. You must have an available AUX channel configured on your radio.",(0,r.jsx)(t.br,{}),"\n","Enable Expert Mode in the Configurator > Click Adjustments\nClick the slider for If enable. Select the AUX # channel to use.\nFor the Range, Select the whole Range from 900 to 2100. Select Rate Profile Selection from the drop-down menu. Via Channel is the same as the AUX channel used."]}),"\n",(0,r.jsxs)(t.p,{children:["CLI: the ",(0,r.jsx)(t.code,{children:"rateprofile"})," command can be used to change the profile:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"rateprofile <index>\n"})}),"\n",(0,r.jsx)(t.p,{children:"To save configuration changes:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"save\n"})}),"\n",(0,r.jsx)(t.h1,{id:"backing-up-profiles-and-rate-profiles",children:"Backing up Profiles and Rate Profiles"}),"\n",(0,r.jsx)(t.p,{children:"Currently creating a backup from the GUI only backs up the active Profile and Rate Profile. So the best way to see and backup all Profiles is to use CLI."}),"\n",(0,r.jsx)(t.h2,{id:"using-diff-and-dump-to-output-only-profiles",children:"Using Diff and Dump to output only Profiles"}),"\n",(0,r.jsxs)(t.p,{children:["Use these commands to view and back up the complete active profiles (including default settings): ",(0,r.jsx)(t.code,{children:"dump profile"}),", & ",(0,r.jsx)(t.code,{children:"dump rates"}),"\nIn order to see all Profiles configured add the ",(0,r.jsx)(t.code,{children:"all"})," variable: ",(0,r.jsx)(t.code,{children:"dump all"}),", & ",(0,r.jsx)(t.code,{children:"diff all"}),"\nUse these commands to view and back up the changes the active profiles -defaults settings: ",(0,r.jsx)(t.code,{children:"diff profile"}),", & ",(0,r.jsx)(t.code,{children:"diff rates"})]}),"\n",(0,r.jsx)(t.p,{children:"Examples:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"# diff rates\n\n# rateprofile\nrateprofile 0\n\nset roll_rc_rate = 200\nset pitch_rc_rate = 200\nset yaw_rc_rate = 200\nset roll_expo = 50\nset pitch_expo = 50\nset yaw_expo = 90\n\n# dump rates\n\n# rateprofile\nrateprofile 0\n\nset thr_mid = 50\nset thr_expo = 0\nset rates_type = BETAFLIGHT\nset roll_rc_rate = 200\nset pitch_rc_rate = 200\nset yaw_rc_rate = 200\nset roll_expo = 50\nset pitch_expo = 50\nset yaw_expo = 90\nset roll_srate = 70\nset pitch_srate = 70\nset yaw_srate = 70\nset tpa_rate = 10\nset tpa_breakpoint = 1650\nset throttle_limit_type = OFF\nset throttle_limit_percent = 100\n\n# diff profile\n\n# profile\nprofile 0\n\nset p_pitch = 40\nset d_pitch = 26\nset p_roll = 20\nset d_roll = 13\nset p_yaw = 80\n\n# dump profile\n\n# profile\nprofile 0\n\nset dterm_lowpass_type = PT1\nset dterm_lowpass_hz = 100\nset dterm_lowpass2_hz = 200\nset dterm_notch_hz = 0\nset dterm_notch_cutoff = 160\nset vbat_pid_gain = OFF\nset pid_at_min_throttle = ON\nset anti_gravity_mode = SMOOTH\nset anti_gravity_threshold = 250\nset anti_gravity_gain = 5000\nset feedforward_transition = 0\nset acc_limit_yaw = 100\nset acc_limit = 0\nset crash_dthreshold = 50\nset crash_gthreshold = 400\nset crash_setpoint_threshold = 350\nset crash_time = 500\nset crash_delay = 0\nset crash_recovery_angle = 10\nset crash_recovery_rate = 100\nset crash_limit_yaw = 200\nset crash_recovery = OFF\nset iterm_rotation = ON\nset smart_feedforward = OFF\nset iterm_relax = OFF\nset iterm_relax_type = GYRO\nset iterm_relax_cutoff = 11\nset iterm_windup = 40\nset iterm_limit = 150\nset pidsum_limit = 500\nset pidsum_limit_yaw = 400\nset yaw_lowpass_hz = 0\nset throttle_boost = 5\nset throttle_boost_cutoff = 15\nset acro_trainer_angle_limit = 20\nset acro_trainer_lookahead_ms = 50\nset acro_trainer_debug_axis = ROLL\nset acro_trainer_gain = 75\nset p_pitch = 40\nset i_pitch = 50\nset d_pitch = 26\nset f_pitch = 60\nset p_roll = 20\nset i_roll = 45\nset d_roll = 13\nset f_roll = 60\nset p_yaw = 80\nset i_yaw = 45\nset d_yaw = 0\nset f_yaw = 60\nset p_level = 50\nset i_level = 50\nset d_level = 75\nset level_limit = 55\nset horizon_tilt_effect = 75\nset horizon_tilt_expert_mode = OFF\nset abs_control_gain = 0\nset abs_control_limit = 90\nset abs_control_error_limit = 20\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"# profile\nprofile 0\n\nset dterm_lowpass_hz = 0\nset dterm_lowpass2_hz = 0\nset dterm_notch_cutoff = 0\nset p_pitch = 40\nset d_pitch = 26\nset p_roll = 20\nset d_roll = 13\nset p_yaw = 80\n\n# profile\nprofile 1\n\nset dterm_lowpass_type = BIQUAD\nset dterm_notch_cutoff = 0\n\n# profile\nprofile 2\n\nset dterm_notch_cutoff = 0\n\n# restore original profile selection\nprofile 2\n\n# rateprofile\nrateprofile 0\n\nset roll_rc_rate = 200\nset pitch_rc_rate = 200\nset yaw_rc_rate = 200\nset roll_expo = 50\nset pitch_expo = 50\nset yaw_expo = 90\n\n# rateprofile\nrateprofile 1\n\n\n# rateprofile\nrateprofile 2\n\n\n# rateprofile\nrateprofile 3\n\nset thr_expo = 25\nset roll_rc_rate = 155\nset tpa_breakpoint = 1500\n\n# rateprofile\nrateprofile 4\n\n\n# rateprofile\nrateprofile 5\n\n\n# restore original rateprofile selection\nrateprofile 3\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>o});var r=n(67294);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);