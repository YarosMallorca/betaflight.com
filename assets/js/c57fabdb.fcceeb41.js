"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6652],{3905:(t,e,r)=>{r.d(e,{Zo:()=>f,kt:()=>d});var n=r(67294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=n.createContext({}),c=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},f=function(t){var e=c(t.components);return n.createElement(s.Provider,{value:e},t.children)},u="mdxType",h={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,f=l(t,["components","mdxType","originalType","parentName"]),u=c(r),g=o,d=u["".concat(s,".").concat(g)]||u[g]||h[g]||a;return r?n.createElement(d,i(i({ref:e},f),{},{components:r})):n.createElement(d,i({ref:e},f))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=g;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[u]="string"==typeof t?t:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8378:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={sidebar_position:0},i="Introduction to Betaflight",l={unversionedId:"wiki/getting-started/introduction",id:"wiki/getting-started/introduction",title:"Introduction to Betaflight",description:"What even is Betaflight?",source:"@site/docs/wiki/getting-started/introduction.mdx",sourceDirName:"wiki/getting-started",slug:"/wiki/getting-started/introduction",permalink:"/docs/wiki/getting-started/introduction",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"wiki",previous:{title:"Getting started",permalink:"/docs/category/getting-started"},next:{title:"Setup Guide",permalink:"/docs/wiki/getting-started/setup-guide"}},s={},c=[{value:"What even is Betaflight?",id:"what-even-is-betaflight",level:2},{value:"What&#39;s different from other FC software?",id:"whats-different-from-other-fc-software",level:2},{value:"Betaflight Features",id:"betaflight-features",level:2}],f={toc:c};function u(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction-to-betaflight"},"Introduction to Betaflight"),(0,o.kt)("h2",{id:"what-even-is-betaflight"},"What even is Betaflight?"),(0,o.kt)("p",null,"Betaflight is flight controller software (firmware) used to fly multi-rotor craft and fixed wing craft"),(0,o.kt)("p",null,"If you're flying an FPV quadcopter, you're probably running Betaflight on the flight controller. If we\nsimplify the functions of a flight controller, it's basically a computer that reads the sensors\n(gyro, accelerometer, GPS, etc...), computes the desired actions to take, and sends the commands to the ESC\nto control the motors. It can also control other peripherals (VTX control, radio link telemetry, LEDs).\nBetaflight is the software that runs on the flight controller to do all of this"),(0,o.kt)("mermaid",{value:"%%{ init: { 'flowchart': { 'curve': 'basis' } } }%%\nflowchart BT\n\nsubgraph fc-g [Flight Controller]\n\tsubgraph sens [Sensors]\n\t\tgyro([Gyroscope])\n\t\tacc([Accelerometer])\n\t\tmag([Magnetometer])\n\t\tgps([GPS])\n\t\tbaro([Barometer])\n\t\trx([Receiver])\n\tend\n\tsubgraph periph [Peripherals]\n\t\tled([LED])\n\t\tvtx([VTX])\n\t\thdvtx([HD VTX])\n\t\tbuzz([Buzzer])\n\tend\n\tfc[Flight Controller]\n\n\tgyro & acc & baro -- I2C/SPI --\x3e fc\n\tgps -- UART --\x3e fc\n\tmag -- I2C --\x3e fc\n\trx <-- CRSF --\x3e fc\n\n\tfc -- WS2811 --\x3e led\n\tfc -- Video/SmartAudio --\x3e vtx\n\tfc <-. \"MSP (SBUS)\" .-> hdvtx\n\tfc --\x3e buzz\n\nend\n\nsubgraph esc-g [ESC]\n    m1((Motor 1))\n\tm2((Motor 2))\n\tm3((Motor 3))\n\tm4((Motor 4))\n    esc[Electronic Speed Controller]\n\n    m1 & m2 --- esc\n\n    esc --- m3 & m4\nend\nesc-g -- Current --\x3e fc-g\nfc-g <-- \"DShot x4 (x8)\" --\x3e esc-g\n\nstyle fc-g fill:transparent,stroke-width:4px\nstyle sens fill:transparent,stroke-width:4px\nstyle periph fill:transparent,stroke-width:4px\nstyle esc-g fill:transparent,stroke-width:4px\nstyle hdvtx stroke-dasharray: 3 3\n"}),(0,o.kt)("h2",{id:"whats-different-from-other-fc-software"},"What's different from other FC software?"),(0,o.kt)("mermaid",{value:"flowchart LR\n\nmultiwii[Multiwii]\nbaseflight[Baseflight]\ncleanflight[Cleanflight]\nbetaflight[Betaflight]\n\nmultiwii -- Port for 32-bit --\x3e baseflight\nbaseflight -- Fork --\x3e cleanflight\ncleanflight -- Fork --\x3e betaflight"}),(0,o.kt)("p",null,"Starting with a bit of a history lesson, the first flight controller software was called Multiwii. It ran on\n8-bit microcontrollers, like an arduino, and as the name suggests, using a literal gyro board from the Nintendo Wii\ncontrollers. It was a great start, but it was limited by the 8-bit microcontroller."),(0,o.kt)("p",null,"The next step was to move to more powerful microcontrollers, and the flight controller software to do this\nwas called Baseflight, which was a port of Multiwii to 32-bit microcontrollers."),(0,o.kt)("p",null,"Due to some disagreements, the Baseflight project was forked into Cleanflight. Cleanflight was a norm for a\npretty good while."),(0,o.kt)("p",null,"For even further experimentation, Betaflight was forked from Cleanflight as a way to have more cutting\nedge features in a separate firmware option (thus the name). You also see a lot of the wiki\nhaving cleanflight mentioned, but we're working on getting everything up to date. Betaflight has since\novertaken Cleanflight in popularity, and is now the most popular flight controller software out there,\nwith a lot of features and very active development."),(0,o.kt)("h2",{id:"betaflight-features"},"Betaflight Features"),(0,o.kt)("p",null,"Betaflight has a lot of features, and is constantly being updated with new ones. Its main focus is on\nhigh-performance flight (freestyle/racing quadcopters), but it also supports different types of aircraft\n(fixed wing, tri/hex/octocopters, and more). Recently, the focus has been expanding to support more\nadvanced GPS rescue in the newest release (4.4)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Wide Target Support")," - Betaflight has become more or less a de-facto standard for flight controller\nsoftware, and so nearly every flight controller out there has a Betaflight target"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Receiver Protocol Support")," - Betaflight supports a wide variety of receiver protocols, including CRSF,\nGhost, FPort, SBUS, Spektrum, and more"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ESC Protocol Support")," - Betaflight supports a wide variety of ESC protocols. The main one used on nearly\neverything is DShot, but there are also other protocols like Oneshot, Multishot, Proshot, and even PWM\nif you really need it"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Precision Tuning"),' - Whether you\'re tuning a tinywhoop, a 5" quad, or a 7"+ macro, you can tune your\ncraft to get the best performance out of it. With tune and filter presets, you can get a good starting point\nwithin seconds'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"RGB LEDs")," - Using any standard WS2811 LED strip, you can add a pop of color to your quad. You can even\nuse the LEDs to display flight information, like battery level warnings, flight mode, status for troubleshooting,\nand more"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Wide Sensor Variety")," - Betaflight can take advantage of a wide variety of sensors. The gyroscope is\nused for most basic flight control with acro mode, but you can also use an accelerometer for self-leveling,\na magnetometer for global heading, a barometer for altitude measurement, and a GPS for GPS rescue and info"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"OSD")," - Betaflight supports on-screen display for pretty much any video system, be it analog or digital.\nYou can display pretty much any information you want, like battery voltage and current draw, GPS coordinates\nand speed, flight timers, and more. You can also use it to configure some settings in a pinch")))}u.isMDXComponent=!0}}]);